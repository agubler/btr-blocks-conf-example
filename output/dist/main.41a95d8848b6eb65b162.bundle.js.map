{"version":3,"sources":["webpack://btr_conf_example/string.ts","webpack://btr_conf_example/WeakMap.ts","webpack://btr_conf_example/cssTransitions.ts","webpack://btr_conf_example/d.ts","webpack://btr_conf_example/Promise.ts","webpack://btr_conf_example/object.ts","webpack://btr_conf_example/Map.ts","webpack://btr_conf_example/Destroyable.ts","webpack://btr_conf_example/Evented.ts","webpack://btr_conf_example/Registry.ts","webpack://btr_conf_example/diff.ts","webpack://btr_conf_example/RegistryHandler.ts","webpack://btr_conf_example/NodeHandler.ts","webpack://btr_conf_example/WidgetBase.ts","webpack://btr_conf_example/vdom.ts","webpack://btr_conf_example/tsx.ts","webpack://btr_conf_example/Block.ts","webpack://btr_conf_example/node_modules/@dojo/webpack-contrib/build-time-render/bridge.js","webpack://btr_conf_example/src/main.tsx","webpack://btr_conf_example/node_modules/tslib/tslib.js"],"names":["fromCodePoint","raw","codePointAt","endsWith","includes","normalize","repeat","startsWith","padEnd","padStart","global","String","Object","util","prototype","WeakMap","shim_WeakMap","browserSpecificTransitionEndEventName","browserSpecificAnimationEndEventName","initialize","element","style","Error","determineBrowserStyleNames","runAndCleanUp","startAnimation","finishAnimation","finished","transitionEnd","removeEventListener","addEventListener","cssTransitions","enter","node","properties","enterAnimation","activeClass","enterAnimationActive","classList","add","requestAnimationFrame","remove","exit","exitAnimation","removeNode","exitAnimationActive","WNODE","VNODE","DOMVNODE","isWNode","child","Boolean","type","isVNode","isDomVNode","w","widgetConstructorOrNode","children","assign","widgetConstructor","v","tag","propertiesOrChildren","deferredPropertiesCallback","Array","isArray","classes","styles","newProperties","tslib","_a","nodeClasses","nodeStyles","nodeProperties","originalProperties","ShimPromise","Promise","has","finally","onFinally","this","then","value","resolve","reason","shim_Promise","object_assign","getOwnPropertyDescriptor","getOwnPropertyNames","getOwnPropertySymbols","is","keys","getOwnPropertyDescriptors","entries","values","globalObject","Map","shim_Map","noop","destroyed","Destroyable_Destroyable","[object Object]","handles","handle","_handles","push","splice","indexOf","destroy","forEach","own","regexMap","Evented_Evented","listenersMap","event","methods","globString","targetString","regex","get","RegExp","replace","set","test","isGlobMatch","method","call","listener","map","_addListener","listeners","WIDGET_BASE_TYPE","isWidgetBaseConstructor","item","_type","Registry_Registry","widgetLabel","emit","action","label","undefined","_widgetRegistry","toString","widgetCtor","emitLoadedEvent","error","injectorFactory","_injectorRegistry","invalidator","injectorItem","injector","promise","hasOwnProperty","default","isWidgetConstructorDefaultExport","hasInjector","isObjectOrArray","reference","previousProperty","newProperty","changed","NodeEventType","widget_core_RegistryHandler","super","_registry","_registryWidgetLabelMap","_registryInjectorLabelMap","baseRegistry","delete","base","widget","define","defineInjector","globalPrecedence","_get","getFunctionName","labelMap","registries","i","length","registry","registeredLabels","on","widget_core_NodeHandler","_nodeMap","key","Widget","Projector","clear","lazyWidgetId","lazyWidgetIdMap","decoratorMap","builtDecoratorMap","widgetInstanceMap","boundAuto","result","ignore","validOldProperty","validNewProperty","previousKeys","newKeys","some","shallow","bind","noBind","WidgetBase_WidgetBase","_initialProperties","_changedPropertyKeys","_nodeHandler","_children","_decoratorCache","_properties","_boundRenderFunc","render","_boundInvalidate","invalidate","dirty","onAttach","onDetach","nodeHandler","rendering","inputProperties","_runAfterConstructors","MetaType","_metaMap","cached","changedPropertyKeys","instanceData","_runBeforeProperties","registeredDiffPropertyNames","getDecorator","propertyNames","allProperties","checkedProperties","diffPropertyResults","runReactions","propertyName","_bindFunctionProperty","diffFunctions","reactionFunctions","executedReactions","reaction","propertyChanged","reactionRun","nodes","filteredNodes","convertedNodes","id","registryItem","_filterAndConvert","text","_runBeforeRenders","dNode","_runAfterRenders","decoratorKey","decoratorList","constructor","specificDecoratorList","decorators","allDecorators","instanceMap","unshift","getPrototypeOf","buildDecorators","decoratorCache","_buildDecoratorList","property","_bindFunctionPropertyMap","bindInfo","boundFunc","scope","beforeProperties","reduce","beforePropertiesFunction","beforeRenders","beforeRenderFunction","updatedRender","console","warn","afterRenders","afterRenderFunction","meta","afterRender","isDomMeta","afterConstructors","afterConstructor","pop","widget_core_WidgetBase","EMPTY_ARRAY","nodeOperations","NAMESPACE_SVG","NAMESPACE_W3","NAMESPACE_XLINK","isWNodeWrapper","isVNodeWrapper","buildPreviousProperties","domNode","current","next","diffType","attributes","events","propName","attrName","getAttribute","props","same","dnode1","dnode2","instance","findIndexOfChild","sameAs","start","createClassPropValue","filter","className","join","trim","updateAttribute","attrValue","namespace","setAttributeNS","removeAttribute","setAttribute","runEnterAnimation","transitions","runExitAnimation","removeDomNode","parentNode","removeChild","arrayFrom","arr","slice","vdom","renderer","_renderScheduled","parentInvalidate","_mountOptions","sync","merge","transition","document","body","_invalidationQueue","_processQueue","_applicationQueue","_eventMap","_instanceToWrapperMap","_parentWrapperMap","_wrapperSiblingMap","_insertBeforeMap","_afterRenderCallbacks","_deferredRenderCallbacks","_allMergedNodes","nodeOperation","propValue","previousValue","updateEvent","eventName","currentValue","previousEvent","callback","evt","target","removeOrphanedEvents","previousProperties","onlyEvents","isEvent","substr","eventCallback","renderedToWrapper","rendered","parent","currentParent","requiresInsertBefore","hasPreviousSiblings","depth","wrappedRendered","hasParentWNode","hasCurrentParentChildren","childrenWrappers","insertBefore","previousItem","renderedItem","wrapper","order","hasAnimations","nextParent","findParentWNodeWrapper","currentNode","parentWNodeWrapper","parentWrapper","findParentDomNode","parentDomNode","runDeferredProperties","processProperties","findInsertBefore","searchNode","nextSibling","setValue","domValue","onInputValue","onSelectValue","setProperties","currentProperties","nextWrapper","includesEventsAndAttributes","propNames","propCount","previousClassString","currentClassString","merged","domClasses","split","styleNames","styleCount","j","styleName","newStyleValue","tagName","lastIndexOf","previousAttributes","attrNames","attrCount","updateAttributes","_runInvalidationQueue","invalidationQueue","previouslyRendered","sort","a","b","sibling","_updateWidget","_runProcessQueue","_runDomInstructionQueue","_runCallbacks","_process","reverse","parentElement","inserted","addRoot","attached","callbacks","run","shift","requestIdleCallback","setTimeout","runAfterRenderCallbacks","runDeferredRenderCallbacks","mergeNodes","oldIndex","newIndex","currentLength","nextLength","instructions","currentWrapper","domElement","toUpperCase","mergeNodeIndex","_processMergeNodes","dom","_processOne","childNodes","createElementNS","createElement","createTextNode","setDomNodeOnParentWrapper","_createDom","_schedule","__setProperties__","__setChildren__","__render__","_createWidget","updatedTextNode","ownerDocument","replaceChild","_updateDom","wrappers","_removeDom","_removeWidget","mount","mountOptions","wrapNodes","mergedNode","REGISTRY_ITEM","FromRegistry","spreadChildren","tsx","__autoRegistryItem","name","meta_Block","_moduleMap","_invalidate","module","args","argsString","JSON","stringify","valueMap","cachedValue","modulePath","bridge","arguments","__dojoBuildBridge","stringifiedArgs","__dojoBuildBridgeCache","main_App","innerHTML","getElementById","__WEBPACK_AMD_DEFINE_RESULT__","__extends","__assign","__rest","__decorate","__param","__metadata","__awaiter","__generator","__exportStar","__values","__read","__spread","__await","__asyncGenerator","__asyncDelegator","__asyncValues","__makeTemplateObject","factory","root","self","createExporter","exports","previous","create","defineProperty","__esModule","exporter","extendStatics","setPrototypeOf","__proto__","d","p","__","t","s","n","e","desc","c","r","Reflect","decorate","paramIndex","decorator","metadataKey","metadataValue","metadata","thisArg","_arguments","P","generator","reject","fulfilled","step","rejected","done","apply","f","y","g","_","sent","trys","ops","verb","throw","return","Symbol","iterator","op","TypeError","m","o","ar","concat","asyncIterator","q","resume","fulfill","settle","cooked"],"mappings":"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","file":"main.js","sourcesContent":["import global from './global';\nimport has from '../has/has';\nimport { wrapNative } from './support/util';\n\nexport interface StringNormalize {\n\t/**\n\t * Returns the String value result of normalizing the string into the normalization form\n\t * named by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n\t * @param target The target string\n\t * @param form Applicable values: \"NFC\", \"NFD\", \"NFKC\", or \"NFKD\", If not specified default\n\t * is \"NFC\"\n\t */\n\t(target: string, form: 'NFC' | 'NFD' | 'NFKC' | 'NFKD'): string;\n\n\t/**\n\t * Returns the String value result of normalizing the string into the normalization form\n\t * named by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n\t * @param target The target string\n\t * @param form Applicable values: \"NFC\", \"NFD\", \"NFKC\", or \"NFKD\", If not specified default\n\t * is \"NFC\"\n\t */\n\t(target: string, form?: string): string;\n}\n\n/**\n * The minimum location of high surrogates\n */\nexport const HIGH_SURROGATE_MIN = 0xd800;\n\n/**\n * The maximum location of high surrogates\n */\nexport const HIGH_SURROGATE_MAX = 0xdbff;\n\n/**\n * The minimum location of low surrogates\n */\nexport const LOW_SURROGATE_MIN = 0xdc00;\n\n/**\n * The maximum location of low surrogates\n */\nexport const LOW_SURROGATE_MAX = 0xdfff;\n\n/* ES6 static methods */\n\n/**\n * Return the String value whose elements are, in order, the elements in the List elements.\n * If length is 0, the empty string is returned.\n * @param codePoints The code points to generate the string\n */\nexport let fromCodePoint: (...codePoints: number[]) => string;\n\n/**\n * `raw` is intended for use as a tag function of a Tagged Template String. When called\n * as such the first argument will be a well formed template call site object and the rest\n * parameter will contain the substitution values.\n * @param template A well-formed template string call site representation.\n * @param substitutions A set of substitution values.\n */\nexport let raw: (template: TemplateStringsArray, ...substitutions: any[]) => string;\n\n/* ES6 instance methods */\n\n/**\n * Returns a nonnegative integer Number less than 1114112 (0x110000) that is the code point\n * value of the UTF-16 encoded code point starting at the string element at position pos in\n * the String resulting from converting this object to a String.\n * If there is no element at that position, the result is undefined.\n * If a valid UTF-16 surrogate pair does not begin at pos, the result is the code unit at pos.\n */\nexport let codePointAt: (target: string, pos?: number) => number | undefined;\n\n/**\n * Returns true if the sequence of elements of searchString converted to a String is the\n * same as the corresponding elements of this object (converted to a String) starting at\n * endPosition – length(this). Otherwise returns false.\n */\nexport let endsWith: (target: string, searchString: string, endPosition?: number) => boolean;\n\n/**\n * Returns true if searchString appears as a substring of the result of converting this\n * object to a String, at one or more positions that are\n * greater than or equal to position; otherwise, returns false.\n * @param target The target string\n * @param searchString search string\n * @param position If position is undefined, 0 is assumed, so as to search all of the String.\n */\nexport let includes: (target: string, searchString: string, position?: number) => boolean;\n\n/**\n * Returns the String value result of normalizing the string into the normalization form\n * named by form as specified in Unicode Standard Annex #15, Unicode Normalization Forms.\n * @param target The target string\n * @param form Applicable values: \"NFC\", \"NFD\", \"NFKC\", or \"NFKD\", If not specified default\n * is \"NFC\"\n */\nexport let normalize: StringNormalize;\n\n/**\n * Returns a String value that is made from count copies appended together. If count is 0,\n * T is the empty String is returned.\n * @param count number of copies to append\n */\nexport let repeat: (target: string, count?: number) => string;\n\n/**\n * Returns true if the sequence of elements of searchString converted to a String is the\n * same as the corresponding elements of this object (converted to a String) starting at\n * position. Otherwise returns false.\n */\nexport let startsWith: (target: string, searchString: string, position?: number) => boolean;\n\n/* ES7 instance methods */\n\n/**\n * Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\n * The padding is applied from the end (right) of the current string.\n *\n * @param target The target string\n * @param maxLength The length of the resulting string once the current string has been padded.\n *        If this parameter is smaller than the current string's length, the current string will be returned as it is.\n *\n * @param fillString The string to pad the current string with.\n *        If this string is too long, it will be truncated and the left-most part will be applied.\n *        The default value for this parameter is \" \" (U+0020).\n */\nexport let padEnd: (target: string, maxLength: number, fillString?: string) => string;\n\n/**\n * Pads the current string with a given string (possibly repeated) so that the resulting string reaches a given length.\n * The padding is applied from the start (left) of the current string.\n *\n * @param target The target string\n * @param maxLength The length of the resulting string once the current string has been padded.\n *        If this parameter is smaller than the current string's length, the current string will be returned as it is.\n *\n * @param fillString The string to pad the current string with.\n *        If this string is too long, it will be truncated and the left-most part will be applied.\n *        The default value for this parameter is \" \" (U+0020).\n */\nexport let padStart: (target: string, maxLength: number, fillString?: string) => string;\n\nif (has('es6-string') && has('es6-string-raw')) {\n\tfromCodePoint = global.String.fromCodePoint;\n\traw = global.String.raw;\n\n\tcodePointAt = wrapNative(global.String.prototype.codePointAt);\n\tendsWith = wrapNative(global.String.prototype.endsWith);\n\tincludes = wrapNative(global.String.prototype.includes);\n\tnormalize = wrapNative(global.String.prototype.normalize);\n\trepeat = wrapNative(global.String.prototype.repeat);\n\tstartsWith = wrapNative(global.String.prototype.startsWith);\n} else {\n\t/**\n\t * Validates that text is defined, and normalizes position (based on the given default if the input is NaN).\n\t * Used by startsWith, includes, and endsWith.\n\t *\n\t * @return Normalized position.\n\t */\n\tconst normalizeSubstringArgs = function(\n\t\tname: string,\n\t\ttext: string,\n\t\tsearch: string,\n\t\tposition: number,\n\t\tisEnd: boolean = false\n\t): [string, string, number] {\n\t\tif (text == null) {\n\t\t\tthrow new TypeError('string.' + name + ' requires a valid string to search against.');\n\t\t}\n\n\t\tconst length = text.length;\n\t\tposition = position !== position ? (isEnd ? length : 0) : position;\n\t\treturn [text, String(search), Math.min(Math.max(position, 0), length)];\n\t};\n\n\tfromCodePoint = function fromCodePoint(...codePoints: number[]): string {\n\t\t// Adapted from https://github.com/mathiasbynens/String.fromCodePoint\n\t\tconst length = arguments.length;\n\t\tif (!length) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst fromCharCode = String.fromCharCode;\n\t\tconst MAX_SIZE = 0x4000;\n\t\tlet codeUnits: number[] = [];\n\t\tlet index = -1;\n\t\tlet result = '';\n\n\t\twhile (++index < length) {\n\t\t\tlet codePoint = Number(arguments[index]);\n\n\t\t\t// Code points must be finite integers within the valid range\n\t\t\tlet isValid =\n\t\t\t\tisFinite(codePoint) && Math.floor(codePoint) === codePoint && codePoint >= 0 && codePoint <= 0x10ffff;\n\t\t\tif (!isValid) {\n\t\t\t\tthrow RangeError('string.fromCodePoint: Invalid code point ' + codePoint);\n\t\t\t}\n\n\t\t\tif (codePoint <= 0xffff) {\n\t\t\t\t// BMP code point\n\t\t\t\tcodeUnits.push(codePoint);\n\t\t\t} else {\n\t\t\t\t// Astral code point; split in surrogate halves\n\t\t\t\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\t\t\t\tcodePoint -= 0x10000;\n\t\t\t\tlet highSurrogate = (codePoint >> 10) + HIGH_SURROGATE_MIN;\n\t\t\t\tlet lowSurrogate = (codePoint % 0x400) + LOW_SURROGATE_MIN;\n\t\t\t\tcodeUnits.push(highSurrogate, lowSurrogate);\n\t\t\t}\n\n\t\t\tif (index + 1 === length || codeUnits.length > MAX_SIZE) {\n\t\t\t\tresult += fromCharCode.apply(null, codeUnits);\n\t\t\t\tcodeUnits.length = 0;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t};\n\n\traw = function raw(callSite: TemplateStringsArray, ...substitutions: any[]): string {\n\t\tlet rawStrings = callSite.raw;\n\t\tlet result = '';\n\t\tlet numSubstitutions = substitutions.length;\n\n\t\tif (callSite == null || callSite.raw == null) {\n\t\t\tthrow new TypeError('string.raw requires a valid callSite object with a raw value');\n\t\t}\n\n\t\tfor (let i = 0, length = rawStrings.length; i < length; i++) {\n\t\t\tresult += rawStrings[i] + (i < numSubstitutions && i < length - 1 ? substitutions[i] : '');\n\t\t}\n\n\t\treturn result;\n\t};\n\n\tcodePointAt = function codePointAt(text: string, position: number = 0): number | undefined {\n\t\t// Adapted from https://github.com/mathiasbynens/String.prototype.codePointAt\n\t\tif (text == null) {\n\t\t\tthrow new TypeError('string.codePointAt requries a valid string.');\n\t\t}\n\t\tconst length = text.length;\n\n\t\tif (position !== position) {\n\t\t\tposition = 0;\n\t\t}\n\t\tif (position < 0 || position >= length) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Get the first code unit\n\t\tconst first = text.charCodeAt(position);\n\t\tif (first >= HIGH_SURROGATE_MIN && first <= HIGH_SURROGATE_MAX && length > position + 1) {\n\t\t\t// Start of a surrogate pair (high surrogate and there is a next code unit); check for low surrogate\n\t\t\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\t\t\tconst second = text.charCodeAt(position + 1);\n\t\t\tif (second >= LOW_SURROGATE_MIN && second <= LOW_SURROGATE_MAX) {\n\t\t\t\treturn (first - HIGH_SURROGATE_MIN) * 0x400 + second - LOW_SURROGATE_MIN + 0x10000;\n\t\t\t}\n\t\t}\n\t\treturn first;\n\t};\n\n\tendsWith = function endsWith(text: string, search: string, endPosition?: number): boolean {\n\t\tif (search === '') {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (typeof endPosition === 'undefined') {\n\t\t\tendPosition = text.length;\n\t\t} else if (endPosition === null || isNaN(endPosition)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t[text, search, endPosition] = normalizeSubstringArgs('endsWith', text, search, endPosition, true);\n\n\t\tconst start = endPosition - search.length;\n\t\tif (start < 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn text.slice(start, endPosition) === search;\n\t};\n\n\tincludes = function includes(text: string, search: string, position: number = 0): boolean {\n\t\t[text, search, position] = normalizeSubstringArgs('includes', text, search, position);\n\t\treturn text.indexOf(search, position) !== -1;\n\t};\n\n\trepeat = function repeat(text: string, count: number = 0): string {\n\t\t// Adapted from https://github.com/mathiasbynens/String.prototype.repeat\n\t\tif (text == null) {\n\t\t\tthrow new TypeError('string.repeat requires a valid string.');\n\t\t}\n\t\tif (count !== count) {\n\t\t\tcount = 0;\n\t\t}\n\t\tif (count < 0 || count === Infinity) {\n\t\t\tthrow new RangeError('string.repeat requires a non-negative finite count.');\n\t\t}\n\n\t\tlet result = '';\n\t\twhile (count) {\n\t\t\tif (count % 2) {\n\t\t\t\tresult += text;\n\t\t\t}\n\t\t\tif (count > 1) {\n\t\t\t\ttext += text;\n\t\t\t}\n\t\t\tcount >>= 1;\n\t\t}\n\t\treturn result;\n\t};\n\n\tstartsWith = function startsWith(text: string, search: string, position: number = 0): boolean {\n\t\tsearch = String(search);\n\t\t[text, search, position] = normalizeSubstringArgs('startsWith', text, search, position);\n\n\t\tconst end = position + search.length;\n\t\tif (end > text.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn text.slice(position, end) === search;\n\t};\n}\n\nif (has('es2017-string')) {\n\tpadEnd = wrapNative(global.String.prototype.padEnd);\n\tpadStart = wrapNative(global.String.prototype.padStart);\n} else {\n\tpadEnd = function padEnd(text: string, maxLength: number, fillString: string = ' '): string {\n\t\tif (text === null || text === undefined) {\n\t\t\tthrow new TypeError('string.repeat requires a valid string.');\n\t\t}\n\n\t\tif (maxLength === Infinity) {\n\t\t\tthrow new RangeError('string.padEnd requires a non-negative finite count.');\n\t\t}\n\n\t\tif (maxLength === null || maxLength === undefined || maxLength < 0) {\n\t\t\tmaxLength = 0;\n\t\t}\n\n\t\tlet strText = String(text);\n\t\tconst padding = maxLength - strText.length;\n\n\t\tif (padding > 0) {\n\t\t\tstrText +=\n\t\t\t\trepeat(fillString, Math.floor(padding / fillString.length)) +\n\t\t\t\tfillString.slice(0, padding % fillString.length);\n\t\t}\n\n\t\treturn strText;\n\t};\n\n\tpadStart = function padStart(text: string, maxLength: number, fillString: string = ' '): string {\n\t\tif (text === null || text === undefined) {\n\t\t\tthrow new TypeError('string.repeat requires a valid string.');\n\t\t}\n\n\t\tif (maxLength === Infinity) {\n\t\t\tthrow new RangeError('string.padStart requires a non-negative finite count.');\n\t\t}\n\n\t\tif (maxLength === null || maxLength === undefined || maxLength < 0) {\n\t\t\tmaxLength = 0;\n\t\t}\n\n\t\tlet strText = String(text);\n\t\tconst padding = maxLength - strText.length;\n\n\t\tif (padding > 0) {\n\t\t\tstrText =\n\t\t\t\trepeat(fillString, Math.floor(padding / fillString.length)) +\n\t\t\t\tfillString.slice(0, padding % fillString.length) +\n\t\t\t\tstrText;\n\t\t}\n\n\t\treturn strText;\n\t};\n}\n","import global from './global';\nimport { isArrayLike, Iterable } from './iterator';\nimport has from '../has/has';\nimport './Symbol';\n\nexport interface WeakMap<K extends object, V> {\n\t/**\n\t * Remove a `key` from the map\n\t *\n\t * @param key The key to remove\n\t * @return `true` if the value was removed, otherwise `false`\n\t */\n\tdelete(key: K): boolean;\n\n\t/**\n\t * Retrieve the value, based on the supplied `key`\n\t *\n\t * @param key The key to retrieve the `value` for\n\t * @return the `value` based on the `key` if found, otherwise `false`\n\t */\n\tget(key: K): V | undefined;\n\n\t/**\n\t * Determines if a `key` is present in the map\n\t *\n\t * @param key The `key` to check\n\t * @return `true` if the key is part of the map, otherwise `false`.\n\t */\n\thas(key: K): boolean;\n\n\t/**\n\t * Set a `value` for a particular `key`.\n\t *\n\t * @param key The `key` to set the `value` for\n\t * @param value The `value` to set\n\t * @return the instances\n\t */\n\tset(key: K, value: V): this;\n\n\treadonly [Symbol.toStringTag]: 'WeakMap';\n}\n\nexport interface WeakMapConstructor {\n\t/**\n\t * Create a new instance of a `WeakMap`\n\t *\n\t * @constructor\n\t */\n\tnew (): WeakMap<object, any>;\n\n\t/**\n\t * Create a new instance of a `WeakMap`\n\t *\n\t * @constructor\n\t *\n\t * @param iterable An iterable that contains yields up key/value pair entries\n\t */\n\tnew <K extends object, V>(iterable?: [K, V][]): WeakMap<K, V>;\n\n\t/**\n\t * Create a new instance of a `WeakMap`\n\t *\n\t * @constructor\n\t *\n\t * @param iterable An iterable that contains yields up key/value pair entries\n\t */\n\tnew <K extends object, V>(iterable: Iterable<[K, V]>): WeakMap<K, V>;\n\n\treadonly prototype: WeakMap<object, any>;\n}\n\nexport let WeakMap: WeakMapConstructor = global.WeakMap;\n\ninterface Entry<K, V> {\n\tkey: K;\n\tvalue: V;\n}\n\nif (!has('es6-weakmap')) {\n\tconst DELETED: any = {};\n\n\tconst getUID = function getUID(): number {\n\t\treturn Math.floor(Math.random() * 100000000);\n\t};\n\n\tconst generateName = (function() {\n\t\tlet startId = Math.floor(Date.now() % 100000000);\n\n\t\treturn function generateName(): string {\n\t\t\treturn '__wm' + getUID() + (startId++ + '__');\n\t\t};\n\t})();\n\n\tWeakMap = class WeakMap<K, V> {\n\t\tprivate readonly _name: string;\n\t\tprivate readonly _frozenEntries: Entry<K, V>[];\n\n\t\tconstructor(iterable?: ArrayLike<[K, V]> | Iterable<[K, V]>) {\n\t\t\tthis._name = generateName();\n\n\t\t\tthis._frozenEntries = [];\n\n\t\t\tif (iterable) {\n\t\t\t\tif (isArrayLike(iterable)) {\n\t\t\t\t\tfor (let i = 0; i < iterable.length; i++) {\n\t\t\t\t\t\tconst item = iterable[i];\n\t\t\t\t\t\tthis.set(item[0], item[1]);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (const [key, value] of iterable) {\n\t\t\t\t\t\tthis.set(key, value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tprivate _getFrozenEntryIndex(key: any): number {\n\t\t\tfor (let i = 0; i < this._frozenEntries.length; i++) {\n\t\t\t\tif (this._frozenEntries[i].key === key) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn -1;\n\t\t}\n\n\t\tdelete(key: any): boolean {\n\t\t\tif (key === undefined || key === null) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst entry: Entry<K, V> = key[this._name];\n\t\t\tif (entry && entry.key === key && entry.value !== DELETED) {\n\t\t\t\tentry.value = DELETED;\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst frozenIndex = this._getFrozenEntryIndex(key);\n\t\t\tif (frozenIndex >= 0) {\n\t\t\t\tthis._frozenEntries.splice(frozenIndex, 1);\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\tget(key: any): V | undefined {\n\t\t\tif (key === undefined || key === null) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tconst entry: Entry<K, V> = key[this._name];\n\t\t\tif (entry && entry.key === key && entry.value !== DELETED) {\n\t\t\t\treturn entry.value;\n\t\t\t}\n\n\t\t\tconst frozenIndex = this._getFrozenEntryIndex(key);\n\t\t\tif (frozenIndex >= 0) {\n\t\t\t\treturn this._frozenEntries[frozenIndex].value;\n\t\t\t}\n\t\t}\n\n\t\thas(key: any): boolean {\n\t\t\tif (key === undefined || key === null) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst entry: Entry<K, V> = key[this._name];\n\t\t\tif (Boolean(entry && entry.key === key && entry.value !== DELETED)) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst frozenIndex = this._getFrozenEntryIndex(key);\n\t\t\tif (frozenIndex >= 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\tset(key: any, value?: any): this {\n\t\t\tif (!key || (typeof key !== 'object' && typeof key !== 'function')) {\n\t\t\t\tthrow new TypeError('Invalid value used as weak map key');\n\t\t\t}\n\t\t\tlet entry: Entry<K, V> = key[this._name];\n\t\t\tif (!entry || entry.key !== key) {\n\t\t\t\tentry = Object.create(null, {\n\t\t\t\t\tkey: { value: key }\n\t\t\t\t});\n\n\t\t\t\tif (Object.isFrozen(key)) {\n\t\t\t\t\tthis._frozenEntries.push(entry);\n\t\t\t\t} else {\n\t\t\t\t\tObject.defineProperty(key, this._name, {\n\t\t\t\t\t\tvalue: entry\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\tentry.value = value;\n\t\t\treturn this;\n\t\t}\n\n\t\t[Symbol.toStringTag]: 'WeakMap' = 'WeakMap';\n\t};\n}\n\nexport default WeakMap;\n","import { VNodeProperties } from './../interfaces';\n\nlet browserSpecificTransitionEndEventName = '';\nlet browserSpecificAnimationEndEventName = '';\n\nfunction determineBrowserStyleNames(element: HTMLElement) {\n\tif ('WebkitTransition' in element.style) {\n\t\tbrowserSpecificTransitionEndEventName = 'webkitTransitionEnd';\n\t\tbrowserSpecificAnimationEndEventName = 'webkitAnimationEnd';\n\t} else if ('transition' in element.style || 'MozTransition' in element.style) {\n\t\tbrowserSpecificTransitionEndEventName = 'transitionend';\n\t\tbrowserSpecificAnimationEndEventName = 'animationend';\n\t} else {\n\t\tthrow new Error('Your browser is not supported');\n\t}\n}\n\nfunction initialize(element: HTMLElement) {\n\tif (browserSpecificAnimationEndEventName === '') {\n\t\tdetermineBrowserStyleNames(element);\n\t}\n}\n\nfunction runAndCleanUp(element: HTMLElement, startAnimation: () => void, finishAnimation: () => void) {\n\tinitialize(element);\n\n\tlet finished = false;\n\n\tlet transitionEnd = function() {\n\t\tif (!finished) {\n\t\t\tfinished = true;\n\t\t\telement.removeEventListener(browserSpecificTransitionEndEventName, transitionEnd);\n\t\t\telement.removeEventListener(browserSpecificAnimationEndEventName, transitionEnd);\n\n\t\t\tfinishAnimation();\n\t\t}\n\t};\n\n\tstartAnimation();\n\n\telement.addEventListener(browserSpecificAnimationEndEventName, transitionEnd);\n\telement.addEventListener(browserSpecificTransitionEndEventName, transitionEnd);\n}\n\nfunction exit(node: HTMLElement, properties: VNodeProperties, exitAnimation: string, removeNode: () => void) {\n\tconst activeClass = properties.exitAnimationActive || `${exitAnimation}-active`;\n\n\trunAndCleanUp(\n\t\tnode,\n\t\t() => {\n\t\t\tnode.classList.add(exitAnimation);\n\n\t\t\trequestAnimationFrame(function() {\n\t\t\t\tnode.classList.add(activeClass);\n\t\t\t});\n\t\t},\n\t\t() => {\n\t\t\tremoveNode();\n\t\t}\n\t);\n}\n\nfunction enter(node: HTMLElement, properties: VNodeProperties, enterAnimation: string) {\n\tconst activeClass = properties.enterAnimationActive || `${enterAnimation}-active`;\n\n\trunAndCleanUp(\n\t\tnode,\n\t\t() => {\n\t\t\tnode.classList.add(enterAnimation);\n\n\t\t\trequestAnimationFrame(function() {\n\t\t\t\tnode.classList.add(activeClass);\n\t\t\t});\n\t\t},\n\t\t() => {\n\t\t\tnode.classList.remove(enterAnimation);\n\t\t\tnode.classList.remove(activeClass);\n\t\t}\n\t);\n}\n\nexport default {\n\tenter,\n\texit\n};\n","import {\n\tConstructor,\n\tDefaultWidgetBaseInterface,\n\tDeferredVirtualProperties,\n\tDNode,\n\tVNode,\n\tRegistryLabel,\n\tVNodeProperties,\n\tWidgetBaseInterface,\n\tWNode,\n\tDomOptions,\n\tRenderResult,\n\tDomVNode,\n\tLazyWidget,\n\tLazyDefine\n} from './interfaces';\n\n/**\n * The identifier for a WNode type\n */\nexport const WNODE = '__WNODE_TYPE';\n\n/**\n * The identifier for a VNode type\n */\nexport const VNODE = '__VNODE_TYPE';\n\n/**\n * The identifier for a VNode type created using dom()\n */\nexport const DOMVNODE = '__DOMVNODE_TYPE';\n\n/**\n * Helper function that returns true if the `DNode` is a `WNode` using the `type` property\n */\nexport function isWNode<W extends WidgetBaseInterface = DefaultWidgetBaseInterface>(\n\tchild: DNode<W> | any\n): child is WNode<W> {\n\treturn Boolean(child && child !== true && typeof child !== 'string' && child.type === WNODE);\n}\n\n/**\n * Helper function that returns true if the `DNode` is a `VNode` using the `type` property\n */\nexport function isVNode(child: DNode): child is VNode {\n\treturn Boolean(\n\t\tchild && child !== true && typeof child !== 'string' && (child.type === VNODE || child.type === DOMVNODE)\n\t);\n}\n\n/**\n * Helper function that returns true if the `DNode` is a `VNode` created with `dom()` using the `type` property\n */\nexport function isDomVNode(child: DNode): child is DomVNode {\n\treturn Boolean(child && child !== true && typeof child !== 'string' && child.type === DOMVNODE);\n}\n\nexport function isElementNode(value: any): value is Element {\n\treturn !!value.tagName;\n}\n\n/**\n * Interface for the decorate modifier\n */\nexport interface Modifier<T extends DNode> {\n\t(dNode: T, breaker: () => void): void;\n}\n\n/**\n * The predicate function for decorate\n */\nexport interface Predicate<T extends DNode> {\n\t(dNode: DNode): dNode is T;\n}\n\n/**\n * Decorator options\n */\nexport interface DecorateOptions<T extends DNode> {\n\tmodifier: Modifier<T>;\n\tpredicate?: Predicate<T>;\n\tshallow?: boolean;\n}\n\n/**\n * Generic decorate function for DNodes. The nodes are modified in place based on the provided predicate\n * and modifier functions.\n *\n * The children of each node are flattened and added to the array for decoration.\n *\n * If no predicate is supplied then the modifier will be executed on all nodes. A `breaker` function is passed to the\n * modifier which will drain the nodes array and exit the decoration.\n *\n * When the `shallow` options is set to `true` the only the top node or nodes will be decorated (only supported using\n * `DecorateOptions`).\n */\nexport function decorate<T extends DNode>(dNodes: DNode, options: DecorateOptions<T>): DNode;\nexport function decorate<T extends DNode>(dNodes: DNode[], options: DecorateOptions<T>): DNode[];\nexport function decorate<T extends DNode>(dNodes: DNode | DNode[], options: DecorateOptions<T>): DNode | DNode[];\nexport function decorate<T extends DNode>(dNodes: DNode, modifier: Modifier<T>, predicate: Predicate<T>): DNode;\nexport function decorate<T extends DNode>(dNodes: DNode[], modifier: Modifier<T>, predicate: Predicate<T>): DNode[];\nexport function decorate<T extends DNode>(\n\tdNodes: RenderResult,\n\tmodifier: Modifier<T>,\n\tpredicate: Predicate<T>\n): RenderResult;\nexport function decorate(dNodes: DNode, modifier: Modifier<DNode>): DNode;\nexport function decorate(dNodes: DNode[], modifier: Modifier<DNode>): DNode[];\nexport function decorate(dNodes: RenderResult, modifier: Modifier<DNode>): RenderResult;\nexport function decorate(\n\tdNodes: DNode | DNode[],\n\toptionsOrModifier: Modifier<DNode> | DecorateOptions<DNode>,\n\tpredicate?: Predicate<DNode>\n): DNode | DNode[] {\n\tlet shallow = false;\n\tlet modifier;\n\tif (typeof optionsOrModifier === 'function') {\n\t\tmodifier = optionsOrModifier;\n\t} else {\n\t\tmodifier = optionsOrModifier.modifier;\n\t\tpredicate = optionsOrModifier.predicate;\n\t\tshallow = optionsOrModifier.shallow || false;\n\t}\n\n\tlet nodes = Array.isArray(dNodes) ? [...dNodes] : [dNodes];\n\tfunction breaker() {\n\t\tnodes = [];\n\t}\n\twhile (nodes.length) {\n\t\tconst node = nodes.shift();\n\t\tif (node && node !== true) {\n\t\t\tif (!shallow && (isWNode(node) || isVNode(node)) && node.children) {\n\t\t\t\tnodes = [...nodes, ...node.children];\n\t\t\t}\n\t\t\tif (!predicate || predicate(node)) {\n\t\t\t\tmodifier(node, breaker);\n\t\t\t}\n\t\t}\n\t}\n\treturn dNodes;\n}\n\n/**\n * Wrapper function for calls to create a widget.\n */\nexport function w<W extends WidgetBaseInterface>(\n\tnode: WNode<W>,\n\tproperties: Partial<W['properties']>,\n\tchildren?: W['children']\n): WNode<W>;\nexport function w<W extends WidgetBaseInterface>(\n\twidgetConstructor: Constructor<W> | RegistryLabel | LazyWidget<W> | LazyDefine<W>,\n\tproperties: W['properties'],\n\tchildren?: W['children']\n): WNode<W>;\nexport function w<W extends WidgetBaseInterface>(\n\twidgetConstructorOrNode: Constructor<W> | RegistryLabel | WNode<W> | LazyWidget<W> | LazyDefine<W>,\n\tproperties: W['properties'],\n\tchildren?: W['children']\n): WNode<W> {\n\tif (isWNode(widgetConstructorOrNode)) {\n\t\tproperties = { ...(widgetConstructorOrNode.properties as any), ...(properties as any) };\n\t\tchildren = children ? children : widgetConstructorOrNode.children;\n\t\twidgetConstructorOrNode = widgetConstructorOrNode.widgetConstructor;\n\t}\n\n\treturn {\n\t\tchildren: children || [],\n\t\twidgetConstructor: widgetConstructorOrNode,\n\t\tproperties,\n\t\ttype: WNODE\n\t};\n}\n\n/**\n * Wrapper function for calls to create VNodes.\n */\nexport function v(node: VNode, properties: VNodeProperties, children: undefined | DNode[]): VNode;\nexport function v(node: VNode, properties: VNodeProperties): VNode;\nexport function v(tag: string, children: undefined | DNode[]): VNode;\nexport function v(tag: string, properties: DeferredVirtualProperties | VNodeProperties, children?: DNode[]): VNode;\nexport function v(tag: string): VNode;\nexport function v(\n\ttag: string | VNode,\n\tpropertiesOrChildren: VNodeProperties | DeferredVirtualProperties | DNode[] = {},\n\tchildren: undefined | DNode[] = undefined\n): VNode {\n\tlet properties: VNodeProperties | DeferredVirtualProperties = propertiesOrChildren;\n\tlet deferredPropertiesCallback;\n\n\tif (Array.isArray(propertiesOrChildren)) {\n\t\tchildren = propertiesOrChildren;\n\t\tproperties = {};\n\t}\n\n\tif (typeof properties === 'function') {\n\t\tdeferredPropertiesCallback = properties;\n\t\tproperties = {};\n\t}\n\n\tif (isVNode(tag)) {\n\t\tlet { classes = [], styles = {}, ...newProperties } = properties;\n\t\tlet { classes: nodeClasses = [], styles: nodeStyles = {}, ...nodeProperties } = tag.properties;\n\t\tnodeClasses = Array.isArray(nodeClasses) ? nodeClasses : [nodeClasses];\n\t\tclasses = Array.isArray(classes) ? classes : [classes];\n\t\tstyles = { ...nodeStyles, ...styles };\n\t\tproperties = { ...nodeProperties, ...newProperties, classes: [...nodeClasses, ...classes], styles };\n\t\tchildren = children ? children : tag.children;\n\t\ttag = tag.tag;\n\t}\n\n\treturn {\n\t\ttag,\n\t\tdeferredPropertiesCallback,\n\t\toriginalProperties: {},\n\t\tchildren,\n\t\tproperties,\n\t\ttype: VNODE\n\t};\n}\n\n/**\n * Create a VNode for an existing DOM Node.\n */\nexport function dom(\n\t{ node, attrs = {}, props = {}, on = {}, diffType = 'none', onAttach }: DomOptions,\n\tchildren?: DNode[]\n): DomVNode {\n\treturn {\n\t\ttag: isElementNode(node) ? node.tagName.toLowerCase() : '',\n\t\tproperties: props,\n\t\tattributes: attrs,\n\t\tevents: on,\n\t\tchildren,\n\t\ttype: DOMVNODE,\n\t\tdomNode: node,\n\t\ttext: isElementNode(node) ? undefined : node.data,\n\t\tdiffType,\n\t\tonAttach\n\t};\n}\n","import { Thenable } from './interfaces';\nimport global from './global';\nimport { queueMicroTask } from './support/queue';\nimport { Iterable } from './iterator';\nimport './Symbol';\nimport has from '../has/has';\n\n/**\n * Executor is the interface for functions used to initialize a Promise.\n */\nexport interface Executor<T> {\n\t/**\n\t * The executor for the promise\n\t *\n\t * @param resolve The resolver callback of the promise\n\t * @param reject The rejector callback of the promise\n\t */\n\t(resolve: (value?: T | PromiseLike<T>) => void, reject: (reason?: any) => void): void;\n}\n\ndeclare global {\n\tinterface Promise<T> {\n\t\tfinally(onfinally?: (() => void) | undefined | null): Promise<T>;\n\t}\n}\n\nexport let ShimPromise: typeof Promise = global.Promise;\n\nexport const isThenable = function isThenable<T>(value: any): value is PromiseLike<T> {\n\treturn value && typeof value.then === 'function';\n};\n\nif (!has('es6-promise')) {\n\tconst enum State {\n\t\tFulfilled,\n\t\tPending,\n\t\tRejected\n\t}\n\n\tglobal.Promise = ShimPromise = class Promise<T> implements Thenable<T> {\n\t\tstatic all(iterable: Iterable<any | PromiseLike<any>> | (any | PromiseLike<any>)[]): Promise<any> {\n\t\t\treturn new this(function(resolve, reject) {\n\t\t\t\tconst values: any[] = [];\n\t\t\t\tlet complete = 0;\n\t\t\t\tlet total = 0;\n\t\t\t\tlet populating = true;\n\n\t\t\t\tfunction fulfill(index: number, value: any): void {\n\t\t\t\t\tvalues[index] = value;\n\t\t\t\t\t++complete;\n\t\t\t\t\tfinish();\n\t\t\t\t}\n\n\t\t\t\tfunction finish(): void {\n\t\t\t\t\tif (populating || complete < total) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tresolve(values);\n\t\t\t\t}\n\n\t\t\t\tfunction processItem(index: number, item: any): void {\n\t\t\t\t\t++total;\n\t\t\t\t\tif (isThenable(item)) {\n\t\t\t\t\t\t// If an item Promise rejects, this Promise is immediately rejected with the item\n\t\t\t\t\t\t// Promise's rejection error.\n\t\t\t\t\t\titem.then(fulfill.bind(null, index), reject);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tPromise.resolve(item).then(fulfill.bind(null, index));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet i = 0;\n\t\t\t\tfor (const value of iterable) {\n\t\t\t\t\tprocessItem(i, value);\n\t\t\t\t\ti++;\n\t\t\t\t}\n\t\t\t\tpopulating = false;\n\n\t\t\t\tfinish();\n\t\t\t});\n\t\t}\n\n\t\tstatic race<T>(iterable: Iterable<T | PromiseLike<T>> | (T | PromiseLike<T>)[]): Promise<T[]> {\n\t\t\treturn new this(function(resolve: (value?: any) => void, reject) {\n\t\t\t\tfor (const item of iterable) {\n\t\t\t\t\tif (item instanceof Promise) {\n\t\t\t\t\t\t// If a Promise item rejects, this Promise is immediately rejected with the item\n\t\t\t\t\t\t// Promise's rejection error.\n\t\t\t\t\t\titem.then(resolve, reject);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tPromise.resolve(item).then(resolve);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tstatic reject(reason?: any): Promise<never> {\n\t\t\treturn new this(function(resolve, reject) {\n\t\t\t\treject(reason);\n\t\t\t});\n\t\t}\n\n\t\tstatic resolve(): Promise<void>;\n\t\tstatic resolve<T>(value: T | PromiseLike<T>): Promise<T>;\n\t\tstatic resolve<T>(value?: any): Promise<T> {\n\t\t\treturn new this(function(resolve) {\n\t\t\t\tresolve(<T>value);\n\t\t\t});\n\t\t}\n\n\t\tstatic [Symbol.species]: PromiseConstructor = ShimPromise as PromiseConstructor;\n\n\t\t/**\n\t\t * Creates a new Promise.\n\t\t *\n\t\t * @constructor\n\t\t *\n\t\t * @param executor\n\t\t * The executor function is called immediately when the Promise is instantiated. It is responsible for\n\t\t * starting the asynchronous operation when it is invoked.\n\t\t *\n\t\t * The executor must call either the passed `resolve` function when the asynchronous operation has completed\n\t\t * successfully, or the `reject` function when the operation fails.\n\t\t */\n\t\tconstructor(executor: Executor<T>) {\n\t\t\t/**\n\t\t\t * If true, the resolution of this promise is chained (\"locked in\") to another promise.\n\t\t\t */\n\t\t\tlet isChained = false;\n\n\t\t\t/**\n\t\t\t * Whether or not this promise is in a resolved state.\n\t\t\t */\n\t\t\tconst isResolved = (): boolean => {\n\t\t\t\treturn this.state !== State.Pending || isChained;\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Callbacks that should be invoked once the asynchronous operation has completed.\n\t\t\t */\n\t\t\tlet callbacks: null | (Array<() => void>) = [];\n\n\t\t\t/**\n\t\t\t * Initially pushes callbacks onto a queue for execution once this promise settles. After the promise settles,\n\t\t\t * enqueues callbacks for execution on the next event loop turn.\n\t\t\t */\n\t\t\tlet whenFinished = function(callback: () => void): void {\n\t\t\t\tif (callbacks) {\n\t\t\t\t\tcallbacks.push(callback);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Settles this promise.\n\t\t\t *\n\t\t\t * @param newState The resolved state for this promise.\n\t\t\t * @param {T|any} value The resolved value for this promise.\n\t\t\t */\n\t\t\tconst settle = (newState: State, value: any): void => {\n\t\t\t\t// A promise can only be settled once.\n\t\t\t\tif (this.state !== State.Pending) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.state = newState;\n\t\t\t\tthis.resolvedValue = value;\n\t\t\t\twhenFinished = queueMicroTask;\n\n\t\t\t\t// Only enqueue a callback runner if there are callbacks so that initially fulfilled Promises don't have to\n\t\t\t\t// wait an extra turn.\n\t\t\t\tif (callbacks && callbacks.length > 0) {\n\t\t\t\t\tqueueMicroTask(function(): void {\n\t\t\t\t\t\tif (callbacks) {\n\t\t\t\t\t\t\tlet count = callbacks.length;\n\t\t\t\t\t\t\tfor (let i = 0; i < count; ++i) {\n\t\t\t\t\t\t\t\tcallbacks[i].call(null);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcallbacks = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t/**\n\t\t\t * Resolves this promise.\n\t\t\t *\n\t\t\t * @param newState The resolved state for this promise.\n\t\t\t * @param {T|any} value The resolved value for this promise.\n\t\t\t */\n\t\t\tconst resolve = (newState: State, value: any): void => {\n\t\t\t\tif (isResolved()) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (isThenable(value)) {\n\t\t\t\t\tvalue.then(settle.bind(null, State.Fulfilled), settle.bind(null, State.Rejected));\n\t\t\t\t\tisChained = true;\n\t\t\t\t} else {\n\t\t\t\t\tsettle(newState, value);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.then = <TResult1 = T, TResult2 = never>(\n\t\t\t\tonFulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,\n\t\t\t\tonRejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null\n\t\t\t): Promise<TResult1 | TResult2> => {\n\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\t// whenFinished initially queues up callbacks for execution after the promise has settled. Once the\n\t\t\t\t\t// promise has settled, whenFinished will schedule callbacks for execution on the next turn through the\n\t\t\t\t\t// event loop.\n\t\t\t\t\twhenFinished(() => {\n\t\t\t\t\t\tconst callback: ((value?: any) => any) | undefined | null =\n\t\t\t\t\t\t\tthis.state === State.Rejected ? onRejected : onFulfilled;\n\n\t\t\t\t\t\tif (typeof callback === 'function') {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tresolve(callback(this.resolvedValue));\n\t\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\t\treject(error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (this.state === State.Rejected) {\n\t\t\t\t\t\t\treject(this.resolvedValue);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresolve(this.resolvedValue);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t};\n\n\t\t\ttry {\n\t\t\t\texecutor(resolve.bind(null, State.Fulfilled), resolve.bind(null, State.Rejected));\n\t\t\t} catch (error) {\n\t\t\t\tsettle(State.Rejected, error);\n\t\t\t}\n\t\t}\n\n\t\tcatch<TResult = never>(\n\t\t\tonRejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null\n\t\t): Promise<T | TResult> {\n\t\t\treturn this.then(undefined, onRejected);\n\t\t}\n\n\t\t/**\n\t\t * The current state of this promise.\n\t\t */\n\t\tprivate state = State.Pending;\n\n\t\t/**\n\t\t * The resolved value for this promise.\n\t\t *\n\t\t * @type {T|any}\n\t\t */\n\t\tprivate resolvedValue: any;\n\n\t\tthen: <TResult1 = T, TResult2 = never>(\n\t\t\tonfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null,\n\t\t\tonrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null\n\t\t) => Promise<TResult1 | TResult2>;\n\n\t\t[Symbol.toStringTag]: 'Promise' = 'Promise';\n\t} as any;\n\t// this cast is needed in order to omit finally in the class declaration; this was done so the finally code\n\t// is not duplicated and always added in the conditional below\n}\n\nif (!has('es2018-promise-finally')) {\n\tglobal.Promise.prototype.finally = function<T>(\n\t\tthis: Promise<T>,\n\t\tonFinally: (() => any) | undefined | null\n\t): Promise<any> {\n\t\treturn this.then(\n\t\t\tonFinally && ((value: T) => Promise.resolve(onFinally()).then(() => value)),\n\t\t\tonFinally &&\n\t\t\t\t((reason: any) =>\n\t\t\t\t\tPromise.resolve(onFinally()).then(() => {\n\t\t\t\t\t\tthrow reason;\n\t\t\t\t\t}))\n\t\t);\n\t};\n}\n\nexport default ShimPromise;\n","import global from './global';\nimport has from '../has/has';\nimport { isSymbol } from './Symbol';\n\nexport interface ObjectAssign {\n\t/**\n\t * Copy the values of all of the enumerable own properties from one or more source objects to a\n\t * target object. Returns the target object.\n\t * @param target The target object to copy to.\n\t * @param source The source object from which to copy properties.\n\t */\n\t<T, U>(target: T, source: U): T & U;\n\n\t/**\n\t * Copy the values of all of the enumerable own properties from one or more source objects to a\n\t * target object. Returns the target object.\n\t * @param target The target object to copy to.\n\t * @param source1 The first source object from which to copy properties.\n\t * @param source2 The second source object from which to copy properties.\n\t */\n\t<T, U, V>(target: T, source1: U, source2: V): T & U & V;\n\n\t/**\n\t * Copy the values of all of the enumerable own properties from one or more source objects to a\n\t * target object. Returns the target object.\n\t * @param target The target object to copy to.\n\t * @param source1 The first source object from which to copy properties.\n\t * @param source2 The second source object from which to copy properties.\n\t * @param source3 The third source object from which to copy properties.\n\t */\n\t<T, U, V, W>(target: T, source1: U, source2: V, source3: W): T & U & V & W;\n\n\t/**\n\t * Copy the values of all of the enumerable own properties from one or more source objects to a\n\t * target object. Returns the target object.\n\t * @param target The target object to copy to.\n\t * @param sources One or more source objects from which to copy properties\n\t */\n\t(target: object, ...sources: any[]): any;\n}\n\nexport interface ObjectEnteries {\n\t/**\n\t * Returns an array of key/values of the enumerable properties of an object\n\t * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n\t */\n\t<T extends { [key: string]: any }, K extends keyof T>(o: T): [keyof T, T[K]][];\n\n\t/**\n\t * Returns an array of key/values of the enumerable properties of an object\n\t * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n\t */\n\t(o: object): [string, any][];\n}\n\nexport interface ObjectGetOwnPropertyDescriptors {\n\t<T>(o: T): { [K in keyof T]: PropertyDescriptor };\n\t(o: any): { [key: string]: PropertyDescriptor };\n}\n\nexport interface ObjectValues {\n\t/**\n\t * Returns an array of values of the enumerable properties of an object\n\t * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n\t */\n\t<T>(o: { [s: string]: T }): T[];\n\n\t/**\n\t * Returns an array of values of the enumerable properties of an object\n\t * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n\t */\n\t(o: object): any[];\n}\n\nexport let assign: ObjectAssign;\n\n/**\n * Gets the own property descriptor of the specified object.\n * An own property descriptor is one that is defined directly on the object and is not\n * inherited from the object's prototype.\n * @param o Object that contains the property.\n * @param p Name of the property.\n */\nexport let getOwnPropertyDescriptor: <T, K extends keyof T>(o: T, propertyKey: K) => PropertyDescriptor | undefined;\n\n/**\n * Returns the names of the own properties of an object. The own properties of an object are those that are defined directly\n * on that object, and are not inherited from the object's prototype. The properties of an object include both fields (objects) and functions.\n * @param o Object that contains the own properties.\n */\nexport let getOwnPropertyNames: (o: any) => string[];\n\n/**\n * Returns an array of all symbol properties found directly on object o.\n * @param o Object to retrieve the symbols from.\n */\nexport let getOwnPropertySymbols: (o: any) => symbol[];\n\n/**\n * Returns true if the values are the same value, false otherwise.\n * @param value1 The first value.\n * @param value2 The second value.\n */\nexport let is: (value1: any, value2: any) => boolean;\n\n/**\n * Returns the names of the enumerable properties and methods of an object.\n * @param o Object that contains the properties and methods. This can be an object that you created or an existing Document Object Model (DOM) object.\n */\nexport let keys: (o: object) => string[];\n\n/* ES7 Object static methods */\n\nexport let getOwnPropertyDescriptors: ObjectGetOwnPropertyDescriptors;\n\nexport let entries: ObjectEnteries;\n\nexport let values: ObjectValues;\n\nif (has('es6-object')) {\n\tconst globalObject = global.Object;\n\tassign = globalObject.assign;\n\tgetOwnPropertyDescriptor = globalObject.getOwnPropertyDescriptor;\n\tgetOwnPropertyNames = globalObject.getOwnPropertyNames;\n\tgetOwnPropertySymbols = globalObject.getOwnPropertySymbols;\n\tis = globalObject.is;\n\tkeys = globalObject.keys;\n} else {\n\tkeys = function symbolAwareKeys(o: object): string[] {\n\t\treturn Object.keys(o).filter((key) => !Boolean(key.match(/^@@.+/)));\n\t};\n\n\tassign = function assign(target: any, ...sources: any[]) {\n\t\tif (target == null) {\n\t\t\t// TypeError if undefined or null\n\t\t\tthrow new TypeError('Cannot convert undefined or null to object');\n\t\t}\n\n\t\tconst to = Object(target);\n\t\tsources.forEach((nextSource) => {\n\t\t\tif (nextSource) {\n\t\t\t\t// Skip over if undefined or null\n\t\t\t\tkeys(nextSource).forEach((nextKey) => {\n\t\t\t\t\tto[nextKey] = nextSource[nextKey];\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\treturn to;\n\t};\n\n\tgetOwnPropertyDescriptor = function<T, K extends keyof T>(o: T, prop: K): PropertyDescriptor | undefined {\n\t\tif (isSymbol(prop)) {\n\t\t\treturn Object.getOwnPropertyDescriptor(o, prop);\n\t\t} else {\n\t\t\treturn Object.getOwnPropertyDescriptor(o, prop);\n\t\t}\n\t};\n\n\tgetOwnPropertyNames = function getOwnPropertyNames(o: any): string[] {\n\t\treturn Object.getOwnPropertyNames(o).filter((key) => !Boolean(key.match(/^@@.+/)));\n\t};\n\n\tgetOwnPropertySymbols = function getOwnPropertySymbols(o: any): symbol[] {\n\t\treturn Object.getOwnPropertyNames(o)\n\t\t\t.filter((key) => Boolean(key.match(/^@@.+/)))\n\t\t\t.map((key) => Symbol.for(key.substring(2)));\n\t};\n\n\tis = function is(value1: any, value2: any): boolean {\n\t\tif (value1 === value2) {\n\t\t\treturn value1 !== 0 || 1 / value1 === 1 / value2; // -0\n\t\t}\n\t\treturn value1 !== value1 && value2 !== value2; // NaN\n\t};\n}\n\nif (has('es2017-object')) {\n\tconst globalObject = global.Object;\n\tgetOwnPropertyDescriptors = globalObject.getOwnPropertyDescriptors;\n\tentries = globalObject.entries;\n\tvalues = globalObject.values;\n} else {\n\tgetOwnPropertyDescriptors = function getOwnPropertyDescriptors(o: any) {\n\t\treturn getOwnPropertyNames(o).reduce(\n\t\t\t(previous, key) => {\n\t\t\t\tprevious[key] = getOwnPropertyDescriptor(o, key)!;\n\t\t\t\treturn previous;\n\t\t\t},\n\t\t\t{} as { [key: string]: PropertyDescriptor }\n\t\t);\n\t};\n\n\tentries = function entries(o: any): [string, any][] {\n\t\treturn keys(o).map((key) => [key, o[key]] as [string, any]);\n\t};\n\n\tvalues = function values(o: any): any[] {\n\t\treturn keys(o).map((key) => o[key]);\n\t};\n}\n","import { isArrayLike, Iterable, IterableIterator, ShimIterator } from './iterator';\nimport global from './global';\nimport { is as objectIs } from './object';\nimport has from '../has/has';\nimport './Symbol';\n\nexport interface Map<K, V> {\n\t/**\n\t * Deletes all keys and their associated values.\n\t */\n\tclear(): void;\n\n\t/**\n\t * Deletes a given key and its associated value.\n\t *\n\t * @param key The key to delete\n\t * @return true if the key exists, false if it does not\n\t */\n\tdelete(key: K): boolean;\n\n\t/**\n\t * Returns an iterator that yields each key/value pair as an array.\n\t *\n\t * @return An iterator for each key/value pair in the instance.\n\t */\n\tentries(): IterableIterator<[K, V]>;\n\n\t/**\n\t * Executes a given function for each map entry. The function\n\t * is invoked with three arguments: the element value, the\n\t * element key, and the associated Map instance.\n\t *\n\t * @param callbackfn The function to execute for each map entry,\n\t * @param thisArg The value to use for `this` for each execution of the calback\n\t */\n\tforEach(callbackfn: (value: V, key: K, map: Map<K, V>) => void, thisArg?: any): void;\n\n\t/**\n\t * Returns the value associated with a given key.\n\t *\n\t * @param key The key to look up\n\t * @return The value if one exists or undefined\n\t */\n\tget(key: K): V | undefined;\n\n\t/**\n\t * Returns an iterator that yields each key in the map.\n\t *\n\t * @return An iterator containing the instance's keys.\n\t */\n\tkeys(): IterableIterator<K>;\n\n\t/**\n\t * Checks for the presence of a given key.\n\t *\n\t * @param key The key to check for\n\t * @return true if the key exists, false if it does not\n\t */\n\thas(key: K): boolean;\n\n\t/**\n\t * Sets the value associated with a given key.\n\t *\n\t * @param key The key to define a value to\n\t * @param value The value to assign\n\t * @return The Map instance\n\t */\n\tset(key: K, value: V): this;\n\n\t/**\n\t * Returns the number of key / value pairs in the Map.\n\t */\n\treadonly size: number;\n\n\t/**\n\t * Returns an iterator that yields each value in the map.\n\t *\n\t * @return An iterator containing the instance's values.\n\t */\n\tvalues(): IterableIterator<V>;\n\n\t/** Returns an iterable of entries in the map. */\n\t[Symbol.iterator](): IterableIterator<[K, V]>;\n\n\treadonly [Symbol.toStringTag]: string;\n}\n\nexport interface MapConstructor {\n\t/**\n\t * Creates a new Map\n\t *\n\t * @constructor\n\t */\n\tnew (): Map<any, any>;\n\n\t/**\n\t * Creates a new Map\n\t *\n\t * @constructor\n\t *\n\t * @param iterator\n\t * Array or iterator containing two-item tuples used to initially populate the map.\n\t * The first item in each tuple corresponds to the key of the map entry.\n\t * The second item corresponds to the value of the map entry.\n\t */\n\tnew <K, V>(iterator?: [K, V][]): Map<K, V>;\n\n\t/**\n\t * Creates a new Map\n\t *\n\t * @constructor\n\t *\n\t * @param iterator\n\t * Array or iterator containing two-item tuples used to initially populate the map.\n\t * The first item in each tuple corresponds to the key of the map entry.\n\t * The second item corresponds to the value of the map entry.\n\t */\n\tnew <K, V>(iterator: Iterable<[K, V]>): Map<K, V>;\n\n\treadonly prototype: Map<any, any>;\n\n\treadonly [Symbol.species]: MapConstructor;\n}\n\nexport let Map: MapConstructor = global.Map;\n\nif (!has('es6-map')) {\n\tMap = class Map<K, V> {\n\t\tprotected readonly _keys: K[] = [];\n\t\tprotected readonly _values: V[] = [];\n\n\t\t/**\n\t\t * An alternative to Array.prototype.indexOf using Object.is\n\t\t * to check for equality. See http://mzl.la/1zuKO2V\n\t\t */\n\t\tprotected _indexOfKey(keys: K[], key: K): number {\n\t\t\tfor (let i = 0, length = keys.length; i < length; i++) {\n\t\t\t\tif (objectIs(keys[i], key)) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t}\n\n\t\tstatic [Symbol.species] = Map;\n\n\t\tconstructor(iterable?: ArrayLike<[K, V]> | Iterable<[K, V]>) {\n\t\t\tif (iterable) {\n\t\t\t\tif (isArrayLike(iterable)) {\n\t\t\t\t\tfor (let i = 0; i < iterable.length; i++) {\n\t\t\t\t\t\tconst value = iterable[i];\n\t\t\t\t\t\tthis.set(value[0], value[1]);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (const value of iterable) {\n\t\t\t\t\t\tthis.set(value[0], value[1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tget size(): number {\n\t\t\treturn this._keys.length;\n\t\t}\n\n\t\tclear(): void {\n\t\t\tthis._keys.length = this._values.length = 0;\n\t\t}\n\n\t\tdelete(key: K): boolean {\n\t\t\tconst index = this._indexOfKey(this._keys, key);\n\t\t\tif (index < 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis._keys.splice(index, 1);\n\t\t\tthis._values.splice(index, 1);\n\t\t\treturn true;\n\t\t}\n\n\t\tentries(): IterableIterator<[K, V]> {\n\t\t\tconst values = this._keys.map(\n\t\t\t\t(key: K, i: number): [K, V] => {\n\t\t\t\t\treturn [key, this._values[i]];\n\t\t\t\t}\n\t\t\t);\n\n\t\t\treturn new ShimIterator(values);\n\t\t}\n\n\t\tforEach(callback: (value: V, key: K, mapInstance: Map<K, V>) => any, context?: {}) {\n\t\t\tconst keys = this._keys;\n\t\t\tconst values = this._values;\n\t\t\tfor (let i = 0, length = keys.length; i < length; i++) {\n\t\t\t\tcallback.call(context, values[i], keys[i], this);\n\t\t\t}\n\t\t}\n\n\t\tget(key: K): V | undefined {\n\t\t\tconst index = this._indexOfKey(this._keys, key);\n\t\t\treturn index < 0 ? undefined : this._values[index];\n\t\t}\n\n\t\thas(key: K): boolean {\n\t\t\treturn this._indexOfKey(this._keys, key) > -1;\n\t\t}\n\n\t\tkeys(): IterableIterator<K> {\n\t\t\treturn new ShimIterator(this._keys);\n\t\t}\n\n\t\tset(key: K, value: V): Map<K, V> {\n\t\t\tlet index = this._indexOfKey(this._keys, key);\n\t\t\tindex = index < 0 ? this._keys.length : index;\n\t\t\tthis._keys[index] = key;\n\t\t\tthis._values[index] = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tvalues(): IterableIterator<V> {\n\t\t\treturn new ShimIterator(this._values);\n\t\t}\n\n\t\t[Symbol.iterator](): IterableIterator<[K, V]> {\n\t\t\treturn this.entries();\n\t\t}\n\n\t\t[Symbol.toStringTag]: 'Map' = 'Map';\n\t};\n}\n\nexport default Map;\n","import Promise from '../shim/Promise';\n\n/**\n * Used through the toolkit as a consistent API to manage how callers can \"cleanup\"\n * when doing a function.\n */\nexport interface Handle {\n\t/**\n\t * Perform the destruction/cleanup logic associated with this Handle\n\t */\n\tdestroy(): void;\n}\n\n/**\n * No op function used to replace a Destroyable instance's `destroy` method, once the instance has been destroyed\n */\nfunction noop(): Promise<boolean> {\n\treturn Promise.resolve(false);\n}\n\n/**\n * No op function used to replace a Destroyable instance's `own` method, once the instance has been destroyed\n */\nfunction destroyed(): never {\n\tthrow new Error('Call made to destroyed method');\n}\n\nexport class Destroyable {\n\t/**\n\t * The instance's handles\n\t */\n\tprivate handles: Handle[];\n\n\t/**\n\t * @constructor\n\t */\n\tconstructor() {\n\t\tthis.handles = [];\n\t}\n\n\t/**\n\t * Register handles for the instance that will be destroyed when `this.destroy` is called\n\t *\n\t * @param {Handle} handle The handle to add for the instance\n\t * @returns {Handle} A wrapper Handle. When the wrapper Handle's `destroy` method is invoked, the original handle is\n\t *                   removed from the instance, and its `destroy` method is invoked.\n\t */\n\town(handle: Handle): Handle {\n\t\tconst { handles: _handles } = this;\n\t\t_handles.push(handle);\n\t\treturn {\n\t\t\tdestroy() {\n\t\t\t\t_handles.splice(_handles.indexOf(handle));\n\t\t\t\thandle.destroy();\n\t\t\t}\n\t\t};\n\t}\n\n\t/**\n\t * Destroys all handlers registered for the instance\n\t *\n\t * @returns {Promise<any} A Promise that resolves once all handles have been destroyed\n\t */\n\tdestroy(): Promise<any> {\n\t\treturn new Promise((resolve) => {\n\t\t\tthis.handles.forEach((handle) => {\n\t\t\t\thandle && handle.destroy && handle.destroy();\n\t\t\t});\n\t\t\tthis.destroy = noop;\n\t\t\tthis.own = destroyed;\n\t\t\tresolve(true);\n\t\t});\n\t}\n}\n\nexport default Destroyable;\n","import Map from '../shim/Map';\nimport { Destroyable, Handle } from './Destroyable';\n\n/**\n * Map of computed regular expressions, keyed by string\n */\nconst regexMap = new Map<string, RegExp>();\n\nexport type EventType = string | symbol;\n\n/**\n * The base event object, which provides a `type` property\n */\nexport interface EventObject<T = EventType> {\n\t/**\n\t * The type of the event\n\t */\n\treadonly type: T;\n}\n\n/**\n * Determines if the event type glob has been matched\n *\n * @returns boolean that indicates if the glob is matched\n */\nexport function isGlobMatch(globString: string | symbol, targetString: string | symbol): boolean {\n\tif (typeof targetString === 'string' && typeof globString === 'string' && globString.indexOf('*') !== -1) {\n\t\tlet regex: RegExp;\n\t\tif (regexMap.has(globString)) {\n\t\t\tregex = regexMap.get(globString)!;\n\t\t} else {\n\t\t\tregex = new RegExp(`^${globString.replace(/\\*/g, '.*')}$`);\n\t\t\tregexMap.set(globString, regex);\n\t\t}\n\t\treturn regex.test(targetString);\n\t} else {\n\t\treturn globString === targetString;\n\t}\n}\n\nexport type EventedCallback<T = EventType, E extends EventObject<T> = EventObject<T>> = {\n\t/**\n\t * A callback that takes an `event` argument\n\t *\n\t * @param event The event object\n\t */\n\n\t(event: E): boolean | void;\n};\n\nexport interface CustomEventTypes<T extends EventObject<any> = EventObject<any>> {\n\t[index: string]: T;\n}\n\n/**\n * A type which is either a targeted event listener or an array of listeners\n * @template T The type of target for the events\n * @template E The event type for the events\n */\nexport type EventedCallbackOrArray<T = EventType, E extends EventObject<T> = EventObject<T>> =\n\t| EventedCallback<T, E>\n\t| EventedCallback<T, E>[];\n\n/**\n * Event Class\n */\nexport class Evented<\n\tM extends CustomEventTypes = {},\n\tT = EventType,\n\tO extends EventObject<T> = EventObject<T>\n> extends Destroyable {\n\t// The following member is purely so TypeScript remembers the type of `M` when extending so\n\t// that the utilities in `on.ts` will work https://github.com/Microsoft/TypeScript/issues/20348\n\t// tslint:disable-next-line\n\tprotected __typeMap__?: M;\n\t/**\n\t * map of listeners keyed by event type\n\t */\n\tprotected listenersMap: Map<T | keyof M, EventedCallback<T, O>[]> = new Map();\n\n\t/**\n\t * Emits the event object for the specified type\n\t *\n\t * @param event the event to emit\n\t */\n\temit<K extends keyof M>(event: M[K]): void;\n\temit(event: O): void;\n\temit(event: any): void {\n\t\tthis.listenersMap.forEach((methods, type) => {\n\t\t\tif (isGlobMatch(type as any, event.type)) {\n\t\t\t\t[...methods].forEach((method) => {\n\t\t\t\t\tmethod.call(this, event);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Catch all handler for various call signatures. The signatures are defined in\n\t * `BaseEventedEvents`.  You can add your own event type -> handler types by extending\n\t * `BaseEventedEvents`.  See example for details.\n\t *\n\t * @param args\n\t *\n\t * @example\n\t *\n\t * interface WidgetBaseEvents extends BaseEventedEvents {\n\t *     (type: 'properties:changed', handler: PropertiesChangedHandler): Handle;\n\t * }\n\t * class WidgetBase extends Evented {\n\t *    on: WidgetBaseEvents;\n\t * }\n\t *\n\t * @return {any}\n\t */\n\ton<K extends keyof M>(type: K, listener: EventedCallbackOrArray<K, M[K]>): Handle;\n\ton(type: T, listener: EventedCallbackOrArray<T, O>): Handle;\n\ton(type: any, listener: EventedCallbackOrArray<any, any>): Handle {\n\t\tif (Array.isArray(listener)) {\n\t\t\tconst handles = listener.map((listener) => this._addListener(type, listener));\n\t\t\treturn {\n\t\t\t\tdestroy() {\n\t\t\t\t\thandles.forEach((handle) => handle.destroy());\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\treturn this._addListener(type, listener);\n\t}\n\n\tprivate _addListener(type: T | keyof M, listener: EventedCallback<T, O>) {\n\t\tconst listeners = this.listenersMap.get(type) || [];\n\t\tlisteners.push(listener);\n\t\tthis.listenersMap.set(type, listeners);\n\t\treturn {\n\t\t\tdestroy: () => {\n\t\t\t\tconst listeners = this.listenersMap.get(type) || [];\n\t\t\t\tlisteners.splice(listeners.indexOf(listener), 1);\n\t\t\t}\n\t\t};\n\t}\n}\n\nexport default Evented;\n","import Promise from '../shim/Promise';\nimport Map from '../shim/Map';\nimport { Evented, EventObject } from '../core/Evented';\nimport {\n\tConstructor,\n\tInjectorFactory,\n\tInjectorItem,\n\tRegistryLabel,\n\tWidgetBaseConstructor,\n\tWidgetBaseInterface,\n\tESMDefaultWidgetBase,\n\tWidgetBaseConstructorFunction,\n\tESMDefaultWidgetBaseFunction\n} from './interfaces';\n\nexport type RegistryItem =\n\t| WidgetBaseConstructor\n\t| Promise<WidgetBaseConstructor>\n\t| WidgetBaseConstructorFunction\n\t| ESMDefaultWidgetBaseFunction;\n\n/**\n * Widget base type\n */\nexport const WIDGET_BASE_TYPE = '__widget_base_type';\n\nexport interface RegistryEventObject extends EventObject<RegistryLabel> {\n\taction: string;\n\titem: WidgetBaseConstructor | InjectorItem;\n}\n/**\n * Widget Registry Interface\n */\nexport interface RegistryInterface {\n\t/**\n\t * Define a WidgetRegistryItem against a label\n\t *\n\t * @param label The label of the widget to register\n\t * @param registryItem The registry item to define\n\t */\n\tdefine(label: RegistryLabel, registryItem: RegistryItem): void;\n\n\t/**\n\t * Return a RegistryItem for the given label, null if an entry doesn't exist\n\t *\n\t * @param widgetLabel The label of the widget to return\n\t * @returns The RegistryItem for the widgetLabel, `null` if no entry exists\n\t */\n\tget<T extends WidgetBaseInterface = WidgetBaseInterface>(label: RegistryLabel): Constructor<T> | null;\n\n\t/**\n\t * Returns a boolean if an entry for the label exists\n\t *\n\t * @param widgetLabel The label to search for\n\t * @returns boolean indicating if a widget registry item exists\n\t */\n\thas(label: RegistryLabel): boolean;\n\n\t/**\n\t * Define an Injector against a label\n\t *\n\t * @param label The label of the injector to register\n\t * @param registryItem The injector factory\n\t */\n\tdefineInjector(label: RegistryLabel, injectorFactory: InjectorFactory): void;\n\n\t/**\n\t * Return an Injector registry item for the given label, null if an entry doesn't exist\n\t *\n\t * @param label The label of the injector to return\n\t * @returns The RegistryItem for the widgetLabel, `null` if no entry exists\n\t */\n\tgetInjector<T>(label: RegistryLabel): InjectorItem<T> | null;\n\n\t/**\n\t * Returns a boolean if an injector for the label exists\n\t *\n\t * @param widgetLabel The label to search for\n\t * @returns boolean indicating if a injector registry item exists\n\t */\n\thasInjector(label: RegistryLabel): boolean;\n}\n\n/**\n * Checks is the item is a subclass of WidgetBase (or a WidgetBase)\n *\n * @param item the item to check\n * @returns true/false indicating if the item is a WidgetBaseConstructor\n */\nexport function isWidgetBaseConstructor<T extends WidgetBaseInterface>(item: any): item is Constructor<T> {\n\treturn Boolean(item && item._type === WIDGET_BASE_TYPE);\n}\n\nexport function isWidgetConstructorDefaultExport<T>(item: any): item is ESMDefaultWidgetBase<T> {\n\treturn Boolean(\n\t\titem &&\n\t\t\titem.hasOwnProperty('__esModule') &&\n\t\t\titem.hasOwnProperty('default') &&\n\t\t\tisWidgetBaseConstructor(item.default)\n\t);\n}\n\n/**\n * The Registry implementation\n */\nexport class Registry extends Evented<{}, RegistryLabel, RegistryEventObject> implements RegistryInterface {\n\t/**\n\t * internal map of labels and RegistryItem\n\t */\n\tprivate _widgetRegistry: Map<RegistryLabel, RegistryItem> | undefined;\n\n\tprivate _injectorRegistry: Map<RegistryLabel, InjectorItem> | undefined;\n\n\t/**\n\t * Emit loaded event for registry label\n\t */\n\tprivate emitLoadedEvent(widgetLabel: RegistryLabel, item: WidgetBaseConstructor | InjectorItem): void {\n\t\tthis.emit({\n\t\t\ttype: widgetLabel,\n\t\t\taction: 'loaded',\n\t\t\titem\n\t\t});\n\t}\n\n\tpublic define(label: RegistryLabel, item: RegistryItem): void {\n\t\tif (this._widgetRegistry === undefined) {\n\t\t\tthis._widgetRegistry = new Map();\n\t\t}\n\n\t\tif (this._widgetRegistry.has(label)) {\n\t\t\tthrow new Error(`widget has already been registered for '${label.toString()}'`);\n\t\t}\n\n\t\tthis._widgetRegistry.set(label, item);\n\n\t\tif (item instanceof Promise) {\n\t\t\titem.then(\n\t\t\t\t(widgetCtor) => {\n\t\t\t\t\tthis._widgetRegistry!.set(label, widgetCtor);\n\t\t\t\t\tthis.emitLoadedEvent(label, widgetCtor);\n\t\t\t\t\treturn widgetCtor;\n\t\t\t\t},\n\t\t\t\t(error) => {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t);\n\t\t} else if (isWidgetBaseConstructor(item)) {\n\t\t\tthis.emitLoadedEvent(label, item);\n\t\t}\n\t}\n\n\tpublic defineInjector(label: RegistryLabel, injectorFactory: InjectorFactory): void {\n\t\tif (this._injectorRegistry === undefined) {\n\t\t\tthis._injectorRegistry = new Map();\n\t\t}\n\n\t\tif (this._injectorRegistry.has(label)) {\n\t\t\tthrow new Error(`injector has already been registered for '${label.toString()}'`);\n\t\t}\n\n\t\tconst invalidator = new Evented();\n\n\t\tconst injectorItem: InjectorItem = {\n\t\t\tinjector: injectorFactory(() => invalidator.emit({ type: 'invalidate' })),\n\t\t\tinvalidator\n\t\t};\n\n\t\tthis._injectorRegistry.set(label, injectorItem);\n\t\tthis.emitLoadedEvent(label, injectorItem);\n\t}\n\n\tpublic get<T extends WidgetBaseInterface = WidgetBaseInterface>(label: RegistryLabel): Constructor<T> | null {\n\t\tif (!this._widgetRegistry || !this.has(label)) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst item = this._widgetRegistry.get(label);\n\n\t\tif (isWidgetBaseConstructor<T>(item)) {\n\t\t\treturn item;\n\t\t}\n\n\t\tif (item instanceof Promise) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst promise = (<WidgetBaseConstructorFunction>item)();\n\t\tthis._widgetRegistry.set(label, promise);\n\n\t\tpromise.then(\n\t\t\t(widgetCtor) => {\n\t\t\t\tif (isWidgetConstructorDefaultExport<T>(widgetCtor)) {\n\t\t\t\t\twidgetCtor = widgetCtor.default;\n\t\t\t\t}\n\n\t\t\t\tthis._widgetRegistry!.set(label, widgetCtor);\n\t\t\t\tthis.emitLoadedEvent(label, widgetCtor);\n\t\t\t\treturn widgetCtor;\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t);\n\n\t\treturn null;\n\t}\n\n\tpublic getInjector<T>(label: RegistryLabel): InjectorItem<T> | null {\n\t\tif (!this._injectorRegistry || !this.hasInjector(label)) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this._injectorRegistry.get(label)!;\n\t}\n\n\tpublic has(label: RegistryLabel): boolean {\n\t\treturn Boolean(this._widgetRegistry && this._widgetRegistry.has(label));\n\t}\n\n\tpublic hasInjector(label: RegistryLabel): boolean {\n\t\treturn Boolean(this._injectorRegistry && this._injectorRegistry.has(label));\n\t}\n}\n\nexport default Registry;\n","import { PropertyChangeRecord } from './interfaces';\nimport { WIDGET_BASE_TYPE } from './Registry';\n\nfunction isObjectOrArray(value: any): boolean {\n\treturn Object.prototype.toString.call(value) === '[object Object]' || Array.isArray(value);\n}\n\nexport function always(previousProperty: any, newProperty: any): PropertyChangeRecord {\n\treturn {\n\t\tchanged: true,\n\t\tvalue: newProperty\n\t};\n}\n\nexport function ignore(previousProperty: any, newProperty: any): PropertyChangeRecord {\n\treturn {\n\t\tchanged: false,\n\t\tvalue: newProperty\n\t};\n}\n\nexport function reference(previousProperty: any, newProperty: any): PropertyChangeRecord {\n\treturn {\n\t\tchanged: previousProperty !== newProperty,\n\t\tvalue: newProperty\n\t};\n}\n\nexport function shallow(previousProperty: any, newProperty: any): PropertyChangeRecord {\n\tlet changed = false;\n\n\tconst validOldProperty = previousProperty && isObjectOrArray(previousProperty);\n\tconst validNewProperty = newProperty && isObjectOrArray(newProperty);\n\n\tif (!validOldProperty || !validNewProperty) {\n\t\treturn {\n\t\t\tchanged: true,\n\t\t\tvalue: newProperty\n\t\t};\n\t}\n\n\tconst previousKeys = Object.keys(previousProperty);\n\tconst newKeys = Object.keys(newProperty);\n\n\tif (previousKeys.length !== newKeys.length) {\n\t\tchanged = true;\n\t} else {\n\t\tchanged = newKeys.some((key) => {\n\t\t\treturn newProperty[key] !== previousProperty[key];\n\t\t});\n\t}\n\treturn {\n\t\tchanged,\n\t\tvalue: newProperty\n\t};\n}\n\nexport function auto(previousProperty: any, newProperty: any): PropertyChangeRecord {\n\tlet result;\n\tif (typeof newProperty === 'function') {\n\t\tif (newProperty._type === WIDGET_BASE_TYPE) {\n\t\t\tresult = reference(previousProperty, newProperty);\n\t\t} else {\n\t\t\tresult = ignore(previousProperty, newProperty);\n\t\t}\n\t} else if (isObjectOrArray(newProperty)) {\n\t\tresult = shallow(previousProperty, newProperty);\n\t} else {\n\t\tresult = reference(previousProperty, newProperty);\n\t}\n\treturn result;\n}\n","import { Map } from '../shim/Map';\nimport { Evented, EventObject } from '../core/Evented';\nimport { Constructor, InjectorFactory, InjectorItem, RegistryLabel, WidgetBaseInterface } from './interfaces';\nimport { Registry, RegistryEventObject, RegistryItem } from './Registry';\n\nexport type RegistryHandlerEventMap = {\n\tinvalidate: EventObject<'invalidate'>;\n};\n\nexport class RegistryHandler extends Evented<RegistryHandlerEventMap> {\n\tprivate _registry = new Registry();\n\tprivate _registryWidgetLabelMap: Map<Registry, RegistryLabel[]> = new Map();\n\tprivate _registryInjectorLabelMap: Map<Registry, RegistryLabel[]> = new Map();\n\tprotected baseRegistry?: Registry;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.own(this._registry);\n\t\tconst destroy = () => {\n\t\t\tif (this.baseRegistry) {\n\t\t\t\tthis._registryWidgetLabelMap.delete(this.baseRegistry);\n\t\t\t\tthis._registryInjectorLabelMap.delete(this.baseRegistry);\n\t\t\t\tthis.baseRegistry = undefined;\n\t\t\t}\n\t\t};\n\t\tthis.own({ destroy });\n\t}\n\n\tpublic set base(baseRegistry: Registry) {\n\t\tif (this.baseRegistry) {\n\t\t\tthis._registryWidgetLabelMap.delete(this.baseRegistry);\n\t\t\tthis._registryInjectorLabelMap.delete(this.baseRegistry);\n\t\t}\n\t\tthis.baseRegistry = baseRegistry;\n\t}\n\n\tpublic define(label: RegistryLabel, widget: RegistryItem): void {\n\t\tthis._registry.define(label, widget);\n\t}\n\n\tpublic defineInjector(label: RegistryLabel, injector: InjectorFactory): void {\n\t\tthis._registry.defineInjector(label, injector);\n\t}\n\n\tpublic has(label: RegistryLabel): boolean {\n\t\treturn this._registry.has(label) || Boolean(this.baseRegistry && this.baseRegistry.has(label));\n\t}\n\n\tpublic hasInjector(label: RegistryLabel): boolean {\n\t\treturn this._registry.hasInjector(label) || Boolean(this.baseRegistry && this.baseRegistry.hasInjector(label));\n\t}\n\n\tpublic get<T extends WidgetBaseInterface = WidgetBaseInterface>(\n\t\tlabel: RegistryLabel,\n\t\tglobalPrecedence: boolean = false\n\t): Constructor<T> | null {\n\t\treturn this._get(label, globalPrecedence, 'get', this._registryWidgetLabelMap);\n\t}\n\n\tpublic getInjector<T>(label: RegistryLabel, globalPrecedence: boolean = false): InjectorItem<T> | null {\n\t\treturn this._get(label, globalPrecedence, 'getInjector', this._registryInjectorLabelMap);\n\t}\n\n\tprivate _get(\n\t\tlabel: RegistryLabel,\n\t\tglobalPrecedence: boolean,\n\t\tgetFunctionName: 'getInjector' | 'get',\n\t\tlabelMap: Map<Registry, RegistryLabel[]>\n\t): any {\n\t\tconst registries = globalPrecedence ? [this.baseRegistry, this._registry] : [this._registry, this.baseRegistry];\n\t\tfor (let i = 0; i < registries.length; i++) {\n\t\t\tconst registry: any = registries[i];\n\t\t\tif (!registry) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst item = registry[getFunctionName](label);\n\t\t\tconst registeredLabels = labelMap.get(registry) || [];\n\t\t\tif (item) {\n\t\t\t\treturn item;\n\t\t\t} else if (registeredLabels.indexOf(label) === -1) {\n\t\t\t\tconst handle = registry.on(label, (event: RegistryEventObject) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tevent.action === 'loaded' &&\n\t\t\t\t\t\t(this as any)[getFunctionName](label, globalPrecedence) === event.item\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.emit({ type: 'invalidate' });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tthis.own(handle);\n\t\t\t\tlabelMap.set(registry, [...registeredLabels, label]);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n}\n\nexport default RegistryHandler;\n","import { Evented, EventObject } from '../core/Evented';\nimport Map from '../shim/Map';\nimport { NodeHandlerInterface } from './interfaces';\n\n/**\n * Enum to identify the type of event.\n * Listening to 'Projector' will notify when projector is created or updated\n * Listening to 'Widget' will notify when widget root is created or updated\n */\nexport enum NodeEventType {\n\tProjector = 'Projector',\n\tWidget = 'Widget'\n}\n\nexport type NodeHandlerEventMap = {\n\tProjector: EventObject<NodeEventType.Projector>;\n\tWidget: EventObject<NodeEventType.Widget>;\n};\n\nexport class NodeHandler extends Evented<NodeHandlerEventMap> implements NodeHandlerInterface {\n\tprivate _nodeMap = new Map<string, Element>();\n\n\tpublic get(key: string): Element | undefined {\n\t\treturn this._nodeMap.get(key);\n\t}\n\n\tpublic has(key: string): boolean {\n\t\treturn this._nodeMap.has(key);\n\t}\n\n\tpublic add(element: Element, key: string): void {\n\t\tthis._nodeMap.set(key, element);\n\t\tthis.emit({ type: key });\n\t}\n\n\tpublic addRoot(): void {\n\t\tthis.emit({ type: NodeEventType.Widget });\n\t}\n\n\tpublic addProjector(): void {\n\t\tthis.emit({ type: NodeEventType.Projector });\n\t}\n\n\tpublic clear(): void {\n\t\tthis._nodeMap.clear();\n\t}\n}\n\nexport default NodeHandler;\n","import Map from '../shim/Map';\nimport WeakMap from '../shim/WeakMap';\nimport { v, VNODE, isVNode, isWNode } from './d';\nimport { auto } from './diff';\nimport {\n\tAfterRender,\n\tBeforeProperties,\n\tBeforeRender,\n\tDiffPropertyReaction,\n\tDNode,\n\tDefaultWidgetBaseInterface,\n\tLazyWidget,\n\tRender,\n\tWidgetMetaConstructor,\n\tWidgetBaseInterface,\n\tWidgetProperties,\n\tWNode,\n\tVNode,\n\tLazyDefine,\n\tMetaBase\n} from './interfaces';\nimport RegistryHandler from './RegistryHandler';\nimport NodeHandler from './NodeHandler';\nimport { isWidgetBaseConstructor, WIDGET_BASE_TYPE } from './Registry';\nimport { Handle } from '../core/Destroyable';\nimport { Base } from './meta/Base';\n\ninterface ReactionFunctionConfig {\n\tpropertyName: string;\n\treaction: DiffPropertyReaction;\n}\n\nexport interface WidgetData {\n\tonDetach: () => void;\n\tonAttach: () => void;\n\tdirty: boolean;\n\tnodeHandler: NodeHandler;\n\tinvalidate?: Function;\n\trendering: boolean;\n\tinputProperties: any;\n}\n\nexport type BoundFunctionData = { boundFunc: (...args: any[]) => any; scope: any };\n\nlet lazyWidgetId = 0;\nconst lazyWidgetIdMap = new WeakMap<LazyWidget, string>();\nconst decoratorMap = new WeakMap<Function, Map<string, any[]>>();\nconst builtDecoratorMap = new WeakMap<Function, Map<string, any[]>>();\nexport const widgetInstanceMap = new WeakMap<\n\tWidgetBase<WidgetProperties, DNode<DefaultWidgetBaseInterface>>,\n\tWidgetData\n>();\nconst boundAuto = auto.bind(null);\n\nexport const noBind = '__dojo_no_bind';\n\nfunction toTextVNode(data: any): VNode {\n\treturn {\n\t\ttag: '',\n\t\tproperties: {},\n\t\tchildren: undefined,\n\t\ttext: `${data}`,\n\t\ttype: VNODE\n\t};\n}\n\nfunction isLazyDefine(item: any): item is LazyDefine {\n\treturn Boolean(item && item.label);\n}\n\nfunction isDomMeta(meta: any): meta is Base {\n\treturn Boolean(meta.afterRender);\n}\n\n/**\n * Main widget base for all widgets to extend\n */\nexport class WidgetBase<P = WidgetProperties, C extends DNode = DNode> implements WidgetBaseInterface<P, C> {\n\t/**\n\t * static identifier\n\t */\n\tstatic _type = WIDGET_BASE_TYPE;\n\n\t/**\n\t * children array\n\t */\n\tprivate _children: (C | null)[];\n\n\t/**\n\t * Indicates if it is the initial set properties cycle\n\t */\n\tprivate _initialProperties = true;\n\n\t/**\n\t * internal widget properties\n\t */\n\tprivate _properties: P & WidgetProperties & { [index: string]: any };\n\n\t/**\n\t * Array of property keys considered changed from the previous set properties\n\t */\n\tprivate _changedPropertyKeys: string[] = [];\n\n\t/**\n\t * map of decorators that are applied to this widget\n\t */\n\tprivate _decoratorCache: Map<string, any[]>;\n\n\tprivate _registry: RegistryHandler | undefined;\n\n\t/**\n\t * Map of functions properties for the bound function\n\t */\n\tprivate _bindFunctionPropertyMap: WeakMap<(...args: any[]) => any, BoundFunctionData> | undefined;\n\n\tprivate _metaMap: Map<WidgetMetaConstructor<any>, MetaBase> | undefined;\n\n\tprivate _boundRenderFunc: Render;\n\n\tprivate _boundInvalidate: () => void;\n\n\tprivate _nodeHandler: NodeHandler = new NodeHandler();\n\n\tprivate _handles: Handle[] = [];\n\n\t/**\n\t * @constructor\n\t */\n\tconstructor() {\n\t\tthis._children = [];\n\t\tthis._decoratorCache = new Map<string, any[]>();\n\t\tthis._properties = {} as P;\n\t\tthis._boundRenderFunc = this.render.bind(this);\n\t\tthis._boundInvalidate = this.invalidate.bind(this);\n\n\t\twidgetInstanceMap.set(this, {\n\t\t\tdirty: true,\n\t\t\tonAttach: (): void => {\n\t\t\t\tthis.onAttach();\n\t\t\t},\n\t\t\tonDetach: (): void => {\n\t\t\t\tthis.onDetach();\n\t\t\t\tthis.destroy();\n\t\t\t},\n\t\t\tnodeHandler: this._nodeHandler,\n\t\t\trendering: false,\n\t\t\tinputProperties: {}\n\t\t});\n\n\t\tthis.own({\n\t\t\tdestroy: () => {\n\t\t\t\twidgetInstanceMap.delete(this);\n\t\t\t\tthis._nodeHandler.clear();\n\t\t\t\tthis._nodeHandler.destroy();\n\t\t\t}\n\t\t});\n\n\t\tthis._runAfterConstructors();\n\t}\n\n\tprotected meta<T extends MetaBase>(MetaType: WidgetMetaConstructor<T>): T {\n\t\tif (this._metaMap === undefined) {\n\t\t\tthis._metaMap = new Map<WidgetMetaConstructor<any>, MetaBase>();\n\t\t}\n\t\tlet cached = this._metaMap.get(MetaType);\n\t\tif (!cached) {\n\t\t\tcached = new MetaType({\n\t\t\t\tinvalidate: this._boundInvalidate,\n\t\t\t\tnodeHandler: this._nodeHandler,\n\t\t\t\tbind: this\n\t\t\t});\n\t\t\tthis.own(cached);\n\t\t\tthis._metaMap.set(MetaType, cached);\n\t\t}\n\n\t\treturn cached as T;\n\t}\n\n\tprotected onAttach(): void {\n\t\t// Do nothing by default.\n\t}\n\n\tprotected onDetach(): void {\n\t\t// Do nothing by default.\n\t}\n\n\tpublic get properties(): Readonly<P> & Readonly<WidgetProperties> {\n\t\treturn this._properties;\n\t}\n\n\tpublic get changedPropertyKeys(): string[] {\n\t\treturn [...this._changedPropertyKeys];\n\t}\n\n\tpublic __setProperties__(originalProperties: this['properties'], bind?: WidgetBaseInterface): void {\n\t\tconst instanceData = widgetInstanceMap.get(this);\n\t\tif (instanceData) {\n\t\t\tinstanceData.inputProperties = originalProperties;\n\t\t}\n\t\tconst properties = this._runBeforeProperties(originalProperties);\n\t\tconst registeredDiffPropertyNames = this.getDecorator('registeredDiffProperty');\n\t\tconst changedPropertyKeys: string[] = [];\n\t\tconst propertyNames = Object.keys(properties);\n\n\t\tif (this._initialProperties === false || registeredDiffPropertyNames.length !== 0) {\n\t\t\tconst allProperties = [...propertyNames, ...Object.keys(this._properties)];\n\t\t\tconst checkedProperties: (string | number)[] = [];\n\t\t\tconst diffPropertyResults: any = {};\n\t\t\tlet runReactions = false;\n\n\t\t\tfor (let i = 0; i < allProperties.length; i++) {\n\t\t\t\tconst propertyName = allProperties[i];\n\t\t\t\tif (checkedProperties.indexOf(propertyName) !== -1) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tcheckedProperties.push(propertyName);\n\t\t\t\tconst previousProperty = this._properties[propertyName];\n\t\t\t\tconst newProperty = this._bindFunctionProperty(properties[propertyName], bind);\n\t\t\t\tif (registeredDiffPropertyNames.indexOf(propertyName) !== -1) {\n\t\t\t\t\trunReactions = true;\n\t\t\t\t\tconst diffFunctions = this.getDecorator(`diffProperty:${propertyName}`);\n\t\t\t\t\tfor (let i = 0; i < diffFunctions.length; i++) {\n\t\t\t\t\t\tconst result = diffFunctions[i](previousProperty, newProperty);\n\t\t\t\t\t\tif (result.changed && changedPropertyKeys.indexOf(propertyName) === -1) {\n\t\t\t\t\t\t\tchangedPropertyKeys.push(propertyName);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (propertyName in properties) {\n\t\t\t\t\t\t\tdiffPropertyResults[propertyName] = result.value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst result = boundAuto(previousProperty, newProperty);\n\t\t\t\t\tif (result.changed && changedPropertyKeys.indexOf(propertyName) === -1) {\n\t\t\t\t\t\tchangedPropertyKeys.push(propertyName);\n\t\t\t\t\t}\n\t\t\t\t\tif (propertyName in properties) {\n\t\t\t\t\t\tdiffPropertyResults[propertyName] = result.value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (runReactions) {\n\t\t\t\tconst reactionFunctions: ReactionFunctionConfig[] = this.getDecorator('diffReaction');\n\t\t\t\tconst executedReactions: Function[] = [];\n\t\t\t\treactionFunctions.forEach(({ reaction, propertyName }) => {\n\t\t\t\t\tconst propertyChanged = changedPropertyKeys.indexOf(propertyName) !== -1;\n\t\t\t\t\tconst reactionRun = executedReactions.indexOf(reaction) !== -1;\n\t\t\t\t\tif (propertyChanged && !reactionRun) {\n\t\t\t\t\t\treaction.call(this, this._properties, diffPropertyResults);\n\t\t\t\t\t\texecutedReactions.push(reaction);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tthis._properties = diffPropertyResults;\n\t\t\tthis._changedPropertyKeys = changedPropertyKeys;\n\t\t} else {\n\t\t\tthis._initialProperties = false;\n\t\t\tfor (let i = 0; i < propertyNames.length; i++) {\n\t\t\t\tconst propertyName = propertyNames[i];\n\t\t\t\tif (typeof properties[propertyName] === 'function') {\n\t\t\t\t\tproperties[propertyName] = this._bindFunctionProperty(properties[propertyName], bind);\n\t\t\t\t} else {\n\t\t\t\t\tchangedPropertyKeys.push(propertyName);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._changedPropertyKeys = changedPropertyKeys;\n\t\t\tthis._properties = { ...properties };\n\t\t}\n\n\t\tif (this._changedPropertyKeys.length > 0) {\n\t\t\tthis.invalidate();\n\t\t}\n\t}\n\n\tpublic get children(): (C | null)[] {\n\t\treturn this._children;\n\t}\n\n\tpublic __setChildren__(children: (C | null)[]): void {\n\t\tif (this._children.length > 0 || children.length > 0) {\n\t\t\tthis._children = children;\n\t\t\tthis.invalidate();\n\t\t}\n\t}\n\n\tprivate _filterAndConvert(nodes: DNode[]): (WNode | VNode)[];\n\tprivate _filterAndConvert(nodes: DNode): WNode | VNode;\n\tprivate _filterAndConvert(nodes: DNode | DNode[]): (WNode | VNode) | (WNode | VNode)[];\n\tprivate _filterAndConvert(nodes: DNode | DNode[]): (WNode | VNode) | (WNode | VNode)[] {\n\t\tconst isArray = Array.isArray(nodes);\n\t\tconst filteredNodes = Array.isArray(nodes) ? nodes : [nodes];\n\t\tconst convertedNodes: (WNode | VNode)[] = [];\n\t\tfor (let i = 0; i < filteredNodes.length; i++) {\n\t\t\tconst node = filteredNodes[i];\n\t\t\tif (!node || node === true) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (typeof node === 'string') {\n\t\t\t\tconvertedNodes.push(toTextVNode(node));\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (isVNode(node) && node.deferredPropertiesCallback) {\n\t\t\t\tconst properties = node.deferredPropertiesCallback(false);\n\t\t\t\tnode.originalProperties = node.properties;\n\t\t\t\tnode.properties = { ...properties, ...node.properties };\n\t\t\t}\n\t\t\tif (isWNode(node) && !isWidgetBaseConstructor(node.widgetConstructor)) {\n\t\t\t\tif (typeof node.widgetConstructor === 'function') {\n\t\t\t\t\tlet id = lazyWidgetIdMap.get(node.widgetConstructor);\n\t\t\t\t\tif (!id) {\n\t\t\t\t\t\tid = `__lazy_widget_${lazyWidgetId++}`;\n\t\t\t\t\t\tlazyWidgetIdMap.set(node.widgetConstructor, id);\n\t\t\t\t\t\tthis.registry.define(id, node.widgetConstructor);\n\t\t\t\t\t}\n\t\t\t\t\tnode.widgetConstructor = id;\n\t\t\t\t} else if (isLazyDefine(node.widgetConstructor)) {\n\t\t\t\t\tconst { label, registryItem } = node.widgetConstructor;\n\t\t\t\t\tif (!this.registry.has(label)) {\n\t\t\t\t\t\tthis.registry.define(label, registryItem);\n\t\t\t\t\t}\n\t\t\t\t\tnode.widgetConstructor = label;\n\t\t\t\t}\n\n\t\t\t\tnode.widgetConstructor =\n\t\t\t\t\tthis.registry.get<WidgetBase>(node.widgetConstructor) || node.widgetConstructor;\n\t\t\t}\n\t\t\tif (!node.bind) {\n\t\t\t\tnode.bind = this;\n\t\t\t}\n\t\t\tconvertedNodes.push(node);\n\t\t\tif (node.children && node.children.length) {\n\t\t\t\tnode.children = this._filterAndConvert(node.children);\n\t\t\t}\n\t\t}\n\t\treturn isArray ? convertedNodes : convertedNodes[0];\n\t}\n\n\tpublic __render__(): (WNode | VNode) | (WNode | VNode)[] {\n\t\tconst instanceData = widgetInstanceMap.get(this);\n\t\tif (instanceData) {\n\t\t\tinstanceData.dirty = false;\n\t\t}\n\t\tconst render = this._runBeforeRenders();\n\t\tconst dNode = this._filterAndConvert(this._runAfterRenders(render()));\n\t\tthis._nodeHandler.clear();\n\t\treturn dNode;\n\t}\n\n\tpublic invalidate(): void {\n\t\tconst instanceData = widgetInstanceMap.get(this);\n\t\tif (instanceData && instanceData.invalidate) {\n\t\t\tinstanceData.invalidate();\n\t\t}\n\t}\n\n\tprotected render(): DNode | DNode[] {\n\t\treturn v('div', {}, this.children);\n\t}\n\n\t/**\n\t * Function to add decorators to WidgetBase\n\t *\n\t * @param decoratorKey The key of the decorator\n\t * @param value The value of the decorator\n\t */\n\tprotected addDecorator(decoratorKey: string, value: any): void {\n\t\tvalue = Array.isArray(value) ? value : [value];\n\t\tif (this.hasOwnProperty('constructor')) {\n\t\t\tlet decoratorList = decoratorMap.get(this.constructor);\n\t\t\tif (!decoratorList) {\n\t\t\t\tdecoratorList = new Map<string, any[]>();\n\t\t\t\tdecoratorMap.set(this.constructor, decoratorList);\n\t\t\t}\n\n\t\t\tlet specificDecoratorList = decoratorList.get(decoratorKey);\n\t\t\tif (!specificDecoratorList) {\n\t\t\t\tspecificDecoratorList = [];\n\t\t\t\tdecoratorList.set(decoratorKey, specificDecoratorList);\n\t\t\t}\n\t\t\tspecificDecoratorList.push(...value);\n\t\t} else {\n\t\t\tconst decorators = this.getDecorator(decoratorKey);\n\t\t\tthis._decoratorCache.set(decoratorKey, [...decorators, ...value]);\n\t\t}\n\t}\n\n\t/**\n\t * Function to build the list of decorators from the global decorator map.\n\t *\n\t * @param decoratorKey  The key of the decorator\n\t * @return An array of decorator values\n\t * @private\n\t */\n\tprivate _buildDecoratorList(decoratorKey: string): any[] {\n\t\tconst allDecorators = [];\n\n\t\tlet constructor = this.constructor;\n\n\t\twhile (constructor) {\n\t\t\tconst instanceMap = decoratorMap.get(constructor);\n\t\t\tif (instanceMap) {\n\t\t\t\tconst decorators = instanceMap.get(decoratorKey);\n\n\t\t\t\tif (decorators) {\n\t\t\t\t\tallDecorators.unshift(...decorators);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconstructor = Object.getPrototypeOf(constructor);\n\t\t}\n\n\t\tconst buildDecorators = builtDecoratorMap.get(this.constructor) || new Map();\n\t\tbuildDecorators.set(decoratorKey, allDecorators);\n\t\tbuiltDecoratorMap.set(this.constructor, buildDecorators);\n\t\treturn allDecorators;\n\t}\n\n\t/**\n\t * Function to retrieve decorator values\n\t *\n\t * @param decoratorKey The key of the decorator\n\t * @returns An array of decorator values\n\t */\n\tprotected getDecorator(decoratorKey: string): any[] {\n\t\tlet decoratorCache = builtDecoratorMap.get(this.constructor);\n\t\tlet allDecorators =\n\t\t\tthis._decoratorCache.get(decoratorKey) || (decoratorCache && decoratorCache.get(decoratorKey));\n\n\t\tif (allDecorators !== undefined) {\n\t\t\treturn allDecorators;\n\t\t}\n\n\t\tallDecorators = this._buildDecoratorList(decoratorKey);\n\n\t\tallDecorators = [...allDecorators];\n\t\tthis._decoratorCache.set(decoratorKey, allDecorators);\n\t\treturn allDecorators;\n\t}\n\n\t/**\n\t * Binds unbound property functions to the specified `bind` property\n\t *\n\t * @param properties properties to check for functions\n\t */\n\tprivate _bindFunctionProperty(property: any, bind: any): any {\n\t\tif (typeof property === 'function' && !property[noBind] && isWidgetBaseConstructor(property) === false) {\n\t\t\tif (this._bindFunctionPropertyMap === undefined) {\n\t\t\t\tthis._bindFunctionPropertyMap = new WeakMap<\n\t\t\t\t\t(...args: any[]) => any,\n\t\t\t\t\t{ boundFunc: (...args: any[]) => any; scope: any }\n\t\t\t\t>();\n\t\t\t}\n\t\t\tconst bindInfo: Partial<BoundFunctionData> = this._bindFunctionPropertyMap.get(property) || {};\n\t\t\tlet { boundFunc, scope } = bindInfo;\n\n\t\t\tif (boundFunc === undefined || scope !== bind) {\n\t\t\t\tboundFunc = property.bind(bind) as (...args: any[]) => any;\n\t\t\t\tthis._bindFunctionPropertyMap.set(property, { boundFunc, scope: bind });\n\t\t\t}\n\t\t\treturn boundFunc;\n\t\t}\n\t\treturn property;\n\t}\n\n\tpublic get registry(): RegistryHandler {\n\t\tif (this._registry === undefined) {\n\t\t\tthis._registry = new RegistryHandler();\n\t\t\tthis.own(this._registry);\n\t\t\tthis.own(this._registry.on('invalidate', this._boundInvalidate));\n\t\t}\n\t\treturn this._registry;\n\t}\n\n\tprivate _runBeforeProperties(properties: any) {\n\t\tconst beforeProperties: BeforeProperties[] = this.getDecorator('beforeProperties');\n\t\tif (beforeProperties.length > 0) {\n\t\t\treturn beforeProperties.reduce(\n\t\t\t\t(properties, beforePropertiesFunction) => {\n\t\t\t\t\treturn { ...properties, ...beforePropertiesFunction.call(this, properties) };\n\t\t\t\t},\n\t\t\t\t{ ...properties }\n\t\t\t);\n\t\t}\n\t\treturn properties;\n\t}\n\n\t/**\n\t * Run all registered before renders and return the updated render method\n\t */\n\tprivate _runBeforeRenders(): Render {\n\t\tconst beforeRenders = this.getDecorator('beforeRender');\n\n\t\tif (beforeRenders.length > 0) {\n\t\t\treturn beforeRenders.reduce((render: Render, beforeRenderFunction: BeforeRender) => {\n\t\t\t\tconst updatedRender = beforeRenderFunction.call(this, render, this._properties, this._children);\n\t\t\t\tif (!updatedRender) {\n\t\t\t\t\tconsole.warn('Render function not returned from beforeRender, using previous render');\n\t\t\t\t\treturn render;\n\t\t\t\t}\n\t\t\t\treturn updatedRender;\n\t\t\t}, this._boundRenderFunc);\n\t\t}\n\t\treturn this._boundRenderFunc;\n\t}\n\n\t/**\n\t * Run all registered after renders and return the decorated DNodes\n\t *\n\t * @param dNode The DNodes to run through the after renders\n\t */\n\tprivate _runAfterRenders(dNode: DNode | DNode[]): DNode | DNode[] {\n\t\tconst afterRenders = this.getDecorator('afterRender');\n\n\t\tif (afterRenders.length > 0) {\n\t\t\tdNode = afterRenders.reduce((dNode: DNode | DNode[], afterRenderFunction: AfterRender) => {\n\t\t\t\treturn afterRenderFunction.call(this, dNode);\n\t\t\t}, dNode);\n\t\t}\n\n\t\tif (this._metaMap !== undefined) {\n\t\t\tthis._metaMap.forEach((meta) => {\n\t\t\t\tisDomMeta(meta) && meta.afterRender();\n\t\t\t});\n\t\t}\n\n\t\treturn dNode;\n\t}\n\n\tprivate _runAfterConstructors(): void {\n\t\tconst afterConstructors = this.getDecorator('afterConstructor');\n\n\t\tif (afterConstructors.length > 0) {\n\t\t\tafterConstructors.forEach((afterConstructor) => afterConstructor.call(this));\n\t\t}\n\t}\n\n\tprotected own(handle: Handle): void {\n\t\tthis._handles.push(handle);\n\t}\n\n\tprotected destroy() {\n\t\twhile (this._handles.length > 0) {\n\t\t\tconst handle = this._handles.pop();\n\t\t\tif (handle) {\n\t\t\t\thandle.destroy();\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport default WidgetBase;\n","import global from '../shim/global';\nimport has from '../has/has';\nimport { WeakMap } from '../shim/WeakMap';\nimport {\n\tWNode,\n\tVNode,\n\tDNode,\n\tVNodeProperties,\n\tWidgetBaseConstructor,\n\tTransitionStrategy,\n\tSupportedClassName,\n\tDomVNode\n} from './interfaces';\nimport transitionStrategy from './animations/cssTransitions';\nimport { isVNode, isWNode, WNODE, v, isDomVNode, w } from './d';\nimport { Registry, isWidgetBaseConstructor } from './Registry';\nimport { WidgetBase, widgetInstanceMap } from './WidgetBase';\n\nexport interface BaseNodeWrapper {\n\tnode: WNode | VNode;\n\tdomNode?: Node;\n\tchildrenWrappers?: DNodeWrapper[];\n\tdepth: number;\n\torder: number;\n\trequiresInsertBefore?: boolean;\n\thasPreviousSiblings?: boolean;\n\thasParentWNode?: boolean;\n\tnamespace?: string;\n\thasAnimations?: boolean;\n}\n\nexport interface WNodeWrapper extends BaseNodeWrapper {\n\tnode: WNode;\n\tinstance?: WidgetBase;\n\tmergeNodes?: Node[];\n\tnodeHandlerCalled?: boolean;\n}\n\nexport interface VNodeWrapper extends BaseNodeWrapper {\n\tnode: VNode | DomVNode;\n\tmerged?: boolean;\n\tdecoratedDeferredProperties?: VNodeProperties;\n\tinserted?: boolean;\n}\n\nexport type DNodeWrapper = VNodeWrapper | WNodeWrapper;\n\nexport interface MountOptions {\n\tsync: boolean;\n\tmerge: boolean;\n\ttransition: TransitionStrategy;\n\tdomNode: HTMLElement;\n\tregistry: Registry | null;\n}\n\nexport interface Renderer {\n\tinvalidate(): void;\n\tmount(mountOptions?: Partial<MountOptions>): void;\n}\n\ninterface ProcessItem {\n\tcurrent?: (WNodeWrapper | VNodeWrapper)[];\n\tnext?: (WNodeWrapper | VNodeWrapper)[];\n\tmeta: ProcessMeta;\n}\n\ninterface ProcessResult {\n\titem?: ProcessItem;\n\twidget?: AttachApplication | DetachApplication;\n\tdom?: ApplicationInstruction;\n}\n\ninterface ProcessMeta {\n\tmergeNodes?: Node[];\n\toldIndex?: number;\n\tnewIndex?: number;\n}\n\ninterface InvalidationQueueItem {\n\tinstance: WidgetBase;\n\tdepth: number;\n\torder: number;\n}\n\ninterface Instruction {\n\tcurrent: undefined | DNodeWrapper;\n\tnext: undefined | DNodeWrapper;\n}\n\ninterface CreateWidgetInstruction {\n\tnext: WNodeWrapper;\n}\n\ninterface UpdateWidgetInstruction {\n\tcurrent: WNodeWrapper;\n\tnext: WNodeWrapper;\n}\n\ninterface RemoveWidgetInstruction {\n\tcurrent: WNodeWrapper;\n}\n\ninterface CreateDomInstruction {\n\tnext: VNodeWrapper;\n}\n\ninterface UpdateDomInstruction {\n\tcurrent: VNodeWrapper;\n\tnext: VNodeWrapper;\n}\n\ninterface RemoveDomInstruction {\n\tcurrent: VNodeWrapper;\n}\n\ninterface AttachApplication {\n\ttype: 'attach';\n\tinstance: WidgetBase;\n\tattached: boolean;\n}\n\ninterface DetachApplication {\n\ttype: 'detach';\n\tcurrent: WNodeWrapper;\n}\n\ninterface CreateDomApplication {\n\ttype: 'create';\n\tcurrent?: VNodeWrapper;\n\tnext: VNodeWrapper;\n\tparentDomNode: Node;\n}\n\ninterface DeleteDomApplication {\n\ttype: 'delete';\n\tcurrent: VNodeWrapper;\n}\n\ninterface UpdateDomApplication {\n\ttype: 'update';\n\tcurrent: VNodeWrapper;\n\tnext: VNodeWrapper;\n}\n\ninterface PreviousProperties {\n\tproperties: any;\n\tattributes?: any;\n\tevents?: any;\n}\n\ntype ApplicationInstruction =\n\t| CreateDomApplication\n\t| UpdateDomApplication\n\t| DeleteDomApplication\n\t| AttachApplication\n\t| DetachApplication;\n\nconst EMPTY_ARRAY: DNodeWrapper[] = [];\nconst nodeOperations = ['focus', 'blur', 'scrollIntoView', 'click'];\nconst NAMESPACE_W3 = 'http://www.w3.org/';\nconst NAMESPACE_SVG = NAMESPACE_W3 + '2000/svg';\nconst NAMESPACE_XLINK = NAMESPACE_W3 + '1999/xlink';\n\nfunction isWNodeWrapper(child: DNodeWrapper): child is WNodeWrapper {\n\treturn child && isWNode(child.node);\n}\n\nfunction isVNodeWrapper(child?: DNodeWrapper | null): child is VNodeWrapper {\n\treturn !!child && isVNode(child.node);\n}\n\nfunction isAttachApplication(value: any): value is AttachApplication | DetachApplication {\n\treturn !!value.type;\n}\n\nfunction updateAttributes(\n\tdomNode: Element,\n\tpreviousAttributes: { [index: string]: string | undefined },\n\tattributes: { [index: string]: string | undefined },\n\tnamespace?: string\n) {\n\tconst attrNames = Object.keys(attributes);\n\tconst attrCount = attrNames.length;\n\tfor (let i = 0; i < attrCount; i++) {\n\t\tconst attrName = attrNames[i];\n\t\tconst attrValue = attributes[attrName];\n\t\tconst previousAttrValue = previousAttributes[attrName];\n\t\tif (attrValue !== previousAttrValue) {\n\t\t\tupdateAttribute(domNode, attrName, attrValue, namespace);\n\t\t}\n\t}\n}\n\nfunction buildPreviousProperties(domNode: any, current: VNodeWrapper, next: VNodeWrapper) {\n\tconst {\n\t\tnode: { diffType, properties, attributes }\n\t} = current;\n\tif (!diffType || diffType === 'vdom') {\n\t\treturn {\n\t\t\tproperties: current.node.properties,\n\t\t\tattributes: current.node.attributes,\n\t\t\tevents: current.node.events\n\t\t};\n\t} else if (diffType === 'none') {\n\t\treturn { properties: {}, attributes: current.node.attributes ? {} : undefined, events: current.node.events };\n\t}\n\tlet newProperties: any = {\n\t\tproperties: {}\n\t};\n\tif (attributes) {\n\t\tnewProperties.attributes = {};\n\t\tnewProperties.events = current.node.events;\n\t\tObject.keys(properties).forEach((propName) => {\n\t\t\tnewProperties.properties[propName] = domNode[propName];\n\t\t});\n\t\tObject.keys(attributes).forEach((attrName) => {\n\t\t\tnewProperties.attributes[attrName] = domNode.getAttribute(attrName);\n\t\t});\n\t\treturn newProperties;\n\t}\n\tnewProperties.properties = Object.keys(properties).reduce(\n\t\t(props, property) => {\n\t\t\tprops[property] = domNode.getAttribute(property) || domNode[property];\n\t\t\treturn props;\n\t\t},\n\t\t{} as any\n\t);\n\treturn newProperties;\n}\n\nfunction checkDistinguishable(wrappers: DNodeWrapper[], index: number, parentWNodeWrapper?: WNodeWrapper) {\n\tconst wrapperToCheck = wrappers[index];\n\tif (isVNodeWrapper(wrapperToCheck) && !wrapperToCheck.node.tag) {\n\t\treturn;\n\t}\n\tconst { key } = wrapperToCheck.node.properties;\n\tlet parentName = 'unknown';\n\tif (parentWNodeWrapper) {\n\t\tconst {\n\t\t\tnode: { widgetConstructor }\n\t\t} = parentWNodeWrapper;\n\t\tparentName = (widgetConstructor as any).name || 'unknown';\n\t}\n\n\tif (key === undefined || key === null) {\n\t\tfor (let i = 0; i < wrappers.length; i++) {\n\t\t\tif (i !== index) {\n\t\t\t\tconst wrapper = wrappers[i];\n\t\t\t\tif (same(wrapper, wrapperToCheck)) {\n\t\t\t\t\tlet nodeIdentifier: string;\n\t\t\t\t\tif (isWNodeWrapper(wrapper)) {\n\t\t\t\t\t\tnodeIdentifier = (wrapper.node.widgetConstructor as any).name || 'unknown';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnodeIdentifier = wrapper.node.tag;\n\t\t\t\t\t}\n\n\t\t\t\t\tconsole.warn(\n\t\t\t\t\t\t`A widget (${parentName}) has had a child added or removed, but they were not able to uniquely identified. It is recommended to provide a unique 'key' property when using the same widget or element (${nodeIdentifier}) multiple times as siblings`\n\t\t\t\t\t);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction same(dnode1: DNodeWrapper, dnode2: DNodeWrapper): boolean {\n\tif (isVNodeWrapper(dnode1) && isVNodeWrapper(dnode2)) {\n\t\tif (isDomVNode(dnode1.node) && isDomVNode(dnode2.node)) {\n\t\t\tif (dnode1.node.domNode !== dnode2.node.domNode) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tif (dnode1.node.tag !== dnode2.node.tag) {\n\t\t\treturn false;\n\t\t}\n\t\tif (dnode1.node.properties.key !== dnode2.node.properties.key) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t} else if (isWNodeWrapper(dnode1) && isWNodeWrapper(dnode2)) {\n\t\tif (dnode1.instance === undefined && typeof dnode2.node.widgetConstructor === 'string') {\n\t\t\treturn false;\n\t\t}\n\t\tif (dnode1.node.widgetConstructor !== dnode2.node.widgetConstructor) {\n\t\t\treturn false;\n\t\t}\n\t\tif (dnode1.node.properties.key !== dnode2.node.properties.key) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nfunction findIndexOfChild(children: DNodeWrapper[], sameAs: DNodeWrapper, start: number) {\n\tfor (let i = start; i < children.length; i++) {\n\t\tif (same(children[i], sameAs)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\nfunction createClassPropValue(classes: SupportedClassName | SupportedClassName[] = []) {\n\tclasses = Array.isArray(classes) ? classes : [classes];\n\treturn classes\n\t\t.filter((className) => className && className !== true)\n\t\t.join(' ')\n\t\t.trim();\n}\n\nfunction updateAttribute(domNode: Element, attrName: string, attrValue: string | undefined, namespace?: string) {\n\tif (namespace === NAMESPACE_SVG && attrName === 'href' && attrValue) {\n\t\tdomNode.setAttributeNS(NAMESPACE_XLINK, attrName, attrValue);\n\t} else if ((attrName === 'role' && attrValue === '') || attrValue === undefined) {\n\t\tdomNode.removeAttribute(attrName);\n\t} else {\n\t\tdomNode.setAttribute(attrName, attrValue);\n\t}\n}\n\nfunction runEnterAnimation(next: VNodeWrapper, transitions: TransitionStrategy) {\n\tconst {\n\t\tdomNode,\n\t\tnode: { properties },\n\t\tnode: {\n\t\t\tproperties: { enterAnimation }\n\t\t}\n\t} = next;\n\tif (enterAnimation && enterAnimation !== true) {\n\t\tif (typeof enterAnimation === 'function') {\n\t\t\treturn enterAnimation(domNode as Element, properties);\n\t\t}\n\t\ttransitions.enter(domNode as Element, properties, enterAnimation);\n\t}\n}\n\nfunction runExitAnimation(current: VNodeWrapper, transitions: TransitionStrategy, exitAnimation: string | Function) {\n\tconst {\n\t\tdomNode,\n\t\tnode: { properties }\n\t} = current;\n\tconst removeDomNode = () => {\n\t\tdomNode && domNode.parentNode && domNode.parentNode.removeChild(domNode);\n\t\tcurrent.domNode = undefined;\n\t};\n\tif (typeof exitAnimation === 'function') {\n\t\treturn exitAnimation(domNode as Element, removeDomNode, properties);\n\t}\n\ttransitions.exit(domNode as Element, properties, exitAnimation, removeDomNode);\n}\n\nfunction arrayFrom(arr: any) {\n\treturn Array.prototype.slice.call(arr);\n}\n\nfunction wrapNodes(renderer: () => DNode) {\n\treturn class extends WidgetBase {\n\t\tpublic isWNodeWrapper = true;\n\n\t\tprotected render() {\n\t\t\tconst result = renderer();\n\t\t\tthis.isWNodeWrapper = isWNode(result);\n\t\t\treturn result;\n\t\t}\n\t};\n}\n\nexport function renderer(renderer: () => WNode | VNode): Renderer {\n\tlet _mountOptions: MountOptions = {\n\t\tsync: false,\n\t\tmerge: true,\n\t\ttransition: transitionStrategy,\n\t\tdomNode: global.document.body,\n\t\tregistry: null\n\t};\n\tlet _invalidationQueue: InvalidationQueueItem[] = [];\n\tlet _processQueue: (ProcessItem | DetachApplication | AttachApplication)[] = [];\n\tlet _applicationQueue: ApplicationInstruction[] = [];\n\tlet _eventMap = new WeakMap<Function, EventListener>();\n\tlet _instanceToWrapperMap = new WeakMap<WidgetBase, WNodeWrapper>();\n\tlet _parentWrapperMap = new WeakMap<DNodeWrapper, DNodeWrapper>();\n\tlet _wrapperSiblingMap = new WeakMap<DNodeWrapper, DNodeWrapper>();\n\tlet _insertBeforeMap: undefined | WeakMap<DNodeWrapper, Node> = new WeakMap<DNodeWrapper, Node>();\n\tlet _renderScheduled: number | undefined;\n\tlet _afterRenderCallbacks: Function[] = [];\n\tlet _deferredRenderCallbacks: Function[] = [];\n\tlet parentInvalidate: () => void;\n\tlet _allMergedNodes: Node[] = [];\n\n\tfunction nodeOperation(\n\t\tpropName: string,\n\t\tpropValue: (() => boolean) | boolean,\n\t\tpreviousValue: boolean,\n\t\tdomNode: HTMLElement & { [index: string]: any }\n\t): void {\n\t\tlet result = propValue && !previousValue;\n\t\tif (typeof propValue === 'function') {\n\t\t\tresult = propValue();\n\t\t}\n\t\tif (result === true) {\n\t\t\t_afterRenderCallbacks.push(() => {\n\t\t\t\tdomNode[propName]();\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction updateEvent(\n\t\tdomNode: Node,\n\t\teventName: string,\n\t\tcurrentValue: Function,\n\t\tbind: any,\n\t\tpreviousValue?: Function\n\t) {\n\t\tif (previousValue) {\n\t\t\tconst previousEvent = _eventMap.get(previousValue);\n\t\t\tdomNode.removeEventListener(eventName, previousEvent);\n\t\t}\n\n\t\tlet callback = currentValue.bind(bind);\n\n\t\tif (eventName === 'input') {\n\t\t\tcallback = function(this: any, evt: Event) {\n\t\t\t\tcurrentValue.call(this, evt);\n\t\t\t\t(evt.target as any)['oninput-value'] = (evt.target as HTMLInputElement).value;\n\t\t\t}.bind(bind);\n\t\t}\n\n\t\tdomNode.addEventListener(eventName, callback);\n\t\t_eventMap.set(currentValue, callback);\n\t}\n\n\tfunction removeOrphanedEvents(\n\t\tdomNode: Element,\n\t\tpreviousProperties: VNodeProperties,\n\t\tproperties: VNodeProperties,\n\t\tonlyEvents: boolean = false\n\t) {\n\t\tObject.keys(previousProperties).forEach((propName) => {\n\t\t\tconst isEvent = propName.substr(0, 2) === 'on' || onlyEvents;\n\t\t\tconst eventName = onlyEvents ? propName : propName.substr(2);\n\t\t\tif (isEvent && !properties[propName]) {\n\t\t\t\tconst eventCallback = _eventMap.get(previousProperties[propName]);\n\t\t\t\tif (eventCallback) {\n\t\t\t\t\tdomNode.removeEventListener(eventName, eventCallback);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction renderedToWrapper(\n\t\trendered: DNode[],\n\t\tparent: DNodeWrapper,\n\t\tcurrentParent: DNodeWrapper | null\n\t): DNodeWrapper[] {\n\t\tconst { requiresInsertBefore, hasPreviousSiblings, namespace, depth } = parent;\n\t\tconst wrappedRendered: DNodeWrapper[] = [];\n\t\tconst hasParentWNode = isWNodeWrapper(parent);\n\t\tconst currentParentChildren = (isVNodeWrapper(currentParent) && currentParent.childrenWrappers) || [];\n\t\tconst hasCurrentParentChildren = currentParentChildren.length > 0;\n\t\tconst insertBefore =\n\t\t\t((requiresInsertBefore || hasPreviousSiblings !== false) && hasParentWNode) ||\n\t\t\t(hasCurrentParentChildren && rendered.length > 1);\n\t\tlet previousItem: DNodeWrapper | undefined;\n\t\tfor (let i = 0; i < rendered.length; i++) {\n\t\t\tconst renderedItem = rendered[i];\n\t\t\tconst wrapper = {\n\t\t\t\tnode: renderedItem,\n\t\t\t\tdepth: depth + 1,\n\t\t\t\torder: i,\n\t\t\t\trequiresInsertBefore: insertBefore,\n\t\t\t\thasParentWNode,\n\t\t\t\tnamespace: namespace\n\t\t\t} as DNodeWrapper;\n\t\t\tif (isVNode(renderedItem) && renderedItem.properties.exitAnimation) {\n\t\t\t\tparent.hasAnimations = true;\n\t\t\t\tlet nextParent = _parentWrapperMap.get(parent);\n\t\t\t\twhile (nextParent) {\n\t\t\t\t\tif (nextParent.hasAnimations) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tnextParent.hasAnimations = true;\n\t\t\t\t\tnextParent = _parentWrapperMap.get(nextParent);\n\t\t\t\t}\n\t\t\t}\n\t\t\t_parentWrapperMap.set(wrapper, parent);\n\t\t\tif (previousItem) {\n\t\t\t\t_wrapperSiblingMap.set(previousItem, wrapper);\n\t\t\t}\n\t\t\twrappedRendered.push(wrapper);\n\t\t\tpreviousItem = wrapper;\n\t\t}\n\t\treturn wrappedRendered;\n\t}\n\n\tfunction findParentWNodeWrapper(currentNode: DNodeWrapper): WNodeWrapper | undefined {\n\t\tlet parentWNodeWrapper: WNodeWrapper | undefined;\n\t\tlet parentWrapper = _parentWrapperMap.get(currentNode);\n\n\t\twhile (!parentWNodeWrapper && parentWrapper) {\n\t\t\tif (!parentWNodeWrapper && isWNodeWrapper(parentWrapper)) {\n\t\t\t\tparentWNodeWrapper = parentWrapper;\n\t\t\t}\n\t\t\tparentWrapper = _parentWrapperMap.get(parentWrapper);\n\t\t}\n\t\treturn parentWNodeWrapper;\n\t}\n\n\tfunction findParentDomNode(currentNode: DNodeWrapper): Node | undefined {\n\t\tlet parentDomNode: Node | undefined;\n\t\tlet parentWrapper = _parentWrapperMap.get(currentNode);\n\n\t\twhile (!parentDomNode && parentWrapper) {\n\t\t\tif (!parentDomNode && isVNodeWrapper(parentWrapper) && parentWrapper.domNode) {\n\t\t\t\tparentDomNode = parentWrapper.domNode;\n\t\t\t}\n\t\t\tparentWrapper = _parentWrapperMap.get(parentWrapper);\n\t\t}\n\t\treturn parentDomNode;\n\t}\n\n\tfunction runDeferredProperties(next: VNodeWrapper) {\n\t\tif (next.node.deferredPropertiesCallback) {\n\t\t\tconst properties = next.node.properties;\n\t\t\tnext.node.properties = { ...next.node.deferredPropertiesCallback(true), ...next.node.originalProperties };\n\t\t\t_afterRenderCallbacks.push(() => {\n\t\t\t\tprocessProperties(next, { properties });\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction findInsertBefore(next: DNodeWrapper) {\n\t\tlet insertBefore: Node | null = null;\n\t\tlet searchNode: DNodeWrapper | undefined = next;\n\t\twhile (!insertBefore) {\n\t\t\tconst nextSibling = _wrapperSiblingMap.get(searchNode);\n\t\t\tif (nextSibling) {\n\t\t\t\tif (isVNodeWrapper(nextSibling)) {\n\t\t\t\t\tif (nextSibling.domNode && nextSibling.domNode.parentNode) {\n\t\t\t\t\t\tinsertBefore = nextSibling.domNode;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tsearchNode = nextSibling;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (nextSibling.domNode && nextSibling.domNode.parentNode) {\n\t\t\t\t\tinsertBefore = nextSibling.domNode;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tsearchNode = nextSibling;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tsearchNode = _parentWrapperMap.get(searchNode);\n\t\t\tif (!searchNode || isVNodeWrapper(searchNode)) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn insertBefore;\n\t}\n\n\tfunction setValue(domNode: any, propValue?: any, previousValue?: any) {\n\t\tconst domValue = domNode.value;\n\t\tconst onInputValue = domNode['oninput-value'];\n\t\tconst onSelectValue = domNode['select-value'];\n\n\t\tif (onSelectValue && domValue !== onSelectValue) {\n\t\t\tdomNode.value = onSelectValue;\n\t\t\tif (domNode.value === onSelectValue) {\n\t\t\t\tdomNode['select-value'] = undefined;\n\t\t\t}\n\t\t} else if ((onInputValue && domValue === onInputValue) || propValue !== previousValue) {\n\t\t\tdomNode.value = propValue;\n\t\t\tdomNode['oninput-value'] = undefined;\n\t\t}\n\t}\n\n\tfunction setProperties(\n\t\tdomNode: HTMLElement,\n\t\tcurrentProperties: VNodeProperties = {},\n\t\tnextWrapper: VNodeWrapper,\n\t\tincludesEventsAndAttributes = true\n\t): void {\n\t\tconst propNames = Object.keys(nextWrapper.node.properties);\n\t\tconst propCount = propNames.length;\n\t\tif (propNames.indexOf('classes') === -1 && currentProperties.classes) {\n\t\t\tdomNode.removeAttribute('class');\n\t\t}\n\n\t\tincludesEventsAndAttributes && removeOrphanedEvents(domNode, currentProperties, nextWrapper.node.properties);\n\n\t\tfor (let i = 0; i < propCount; i++) {\n\t\t\tconst propName = propNames[i];\n\t\t\tlet propValue = nextWrapper.node.properties[propName];\n\t\t\tconst previousValue = currentProperties[propName];\n\t\t\tif (propName === 'classes') {\n\t\t\t\tconst previousClassString = createClassPropValue(previousValue);\n\t\t\t\tlet currentClassString = createClassPropValue(propValue);\n\t\t\t\tif (previousClassString !== currentClassString) {\n\t\t\t\t\tif (currentClassString) {\n\t\t\t\t\t\tif (nextWrapper.merged) {\n\t\t\t\t\t\t\tconst domClasses = (domNode.getAttribute('class') || '').split(' ');\n\t\t\t\t\t\t\tfor (let i = 0; i < domClasses.length; i++) {\n\t\t\t\t\t\t\t\tif (currentClassString.indexOf(domClasses[i]) === -1) {\n\t\t\t\t\t\t\t\t\tcurrentClassString = `${domClasses[i]} ${currentClassString}`;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdomNode.setAttribute('class', currentClassString);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdomNode.removeAttribute('class');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (nodeOperations.indexOf(propName) !== -1) {\n\t\t\t\tnodeOperation(propName, propValue, previousValue, domNode);\n\t\t\t} else if (propName === 'styles') {\n\t\t\t\tconst styleNames = Object.keys(propValue);\n\t\t\t\tconst styleCount = styleNames.length;\n\t\t\t\tfor (let j = 0; j < styleCount; j++) {\n\t\t\t\t\tconst styleName = styleNames[j];\n\t\t\t\t\tconst newStyleValue = propValue[styleName];\n\t\t\t\t\tconst oldStyleValue = previousValue && previousValue[styleName];\n\t\t\t\t\tif (newStyleValue === oldStyleValue) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\t(domNode.style as any)[styleName] = newStyleValue || '';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!propValue && typeof previousValue === 'string') {\n\t\t\t\t\tpropValue = '';\n\t\t\t\t}\n\t\t\t\tif (propName === 'value') {\n\t\t\t\t\tif ((domNode as HTMLElement).tagName === 'SELECT') {\n\t\t\t\t\t\t(domNode as any)['select-value'] = propValue;\n\t\t\t\t\t}\n\t\t\t\t\tsetValue(domNode, propValue, previousValue);\n\t\t\t\t} else if (propName !== 'key' && propValue !== previousValue) {\n\t\t\t\t\tconst type = typeof propValue;\n\t\t\t\t\tif (type === 'function' && propName.lastIndexOf('on', 0) === 0 && includesEventsAndAttributes) {\n\t\t\t\t\t\tupdateEvent(domNode, propName.substr(2), propValue, nextWrapper.node.bind, previousValue);\n\t\t\t\t\t} else if (type === 'string' && propName !== 'innerHTML' && includesEventsAndAttributes) {\n\t\t\t\t\t\tupdateAttribute(domNode, propName, propValue, nextWrapper.namespace);\n\t\t\t\t\t} else if (propName === 'scrollLeft' || propName === 'scrollTop') {\n\t\t\t\t\t\tif ((domNode as any)[propName] !== propValue) {\n\t\t\t\t\t\t\t(domNode as any)[propName] = propValue;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t(domNode as any)[propName] = propValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction runDeferredRenderCallbacks() {\n\t\tconst { sync } = _mountOptions;\n\t\tconst callbacks = _deferredRenderCallbacks;\n\t\t_deferredRenderCallbacks = [];\n\t\tif (callbacks.length) {\n\t\t\tconst run = () => {\n\t\t\t\tlet callback: Function | undefined;\n\t\t\t\twhile ((callback = callbacks.shift())) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (sync) {\n\t\t\t\trun();\n\t\t\t} else {\n\t\t\t\tglobal.requestAnimationFrame(run);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction runAfterRenderCallbacks() {\n\t\tconst { sync } = _mountOptions;\n\t\tconst callbacks = _afterRenderCallbacks;\n\t\t_afterRenderCallbacks = [];\n\t\tif (callbacks.length) {\n\t\t\tconst run = () => {\n\t\t\t\tlet callback: Function | undefined;\n\t\t\t\twhile ((callback = callbacks.shift())) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t};\n\t\t\tif (sync) {\n\t\t\t\trun();\n\t\t\t} else {\n\t\t\t\tif (global.requestIdleCallback) {\n\t\t\t\t\tglobal.requestIdleCallback(run);\n\t\t\t\t} else {\n\t\t\t\t\tsetTimeout(run);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction processProperties(next: VNodeWrapper, previousProperties: PreviousProperties) {\n\t\tif (next.node.attributes && next.node.events) {\n\t\t\tupdateAttributes(\n\t\t\t\tnext.domNode as HTMLElement,\n\t\t\t\tpreviousProperties.attributes || {},\n\t\t\t\tnext.node.attributes,\n\t\t\t\tnext.namespace\n\t\t\t);\n\t\t\tsetProperties(next.domNode as HTMLElement, previousProperties.properties, next, false);\n\t\t\tconst events = next.node.events || {};\n\t\t\tif (previousProperties.events) {\n\t\t\t\tremoveOrphanedEvents(\n\t\t\t\t\tnext.domNode as HTMLElement,\n\t\t\t\t\tpreviousProperties.events || {},\n\t\t\t\t\tnext.node.events,\n\t\t\t\t\ttrue\n\t\t\t\t);\n\t\t\t}\n\t\t\tpreviousProperties.events = previousProperties.events || {};\n\t\t\tObject.keys(events).forEach((event) => {\n\t\t\t\tupdateEvent(\n\t\t\t\t\tnext.domNode as HTMLElement,\n\t\t\t\t\tevent,\n\t\t\t\t\tevents[event],\n\t\t\t\t\tnext.node.bind,\n\t\t\t\t\tpreviousProperties.events[event]\n\t\t\t\t);\n\t\t\t});\n\t\t} else {\n\t\t\tsetProperties(next.domNode as HTMLElement, previousProperties.properties, next);\n\t\t}\n\t}\n\n\tfunction mount(mountOptions: Partial<MountOptions> = {}) {\n\t\t_mountOptions = { ..._mountOptions, ...mountOptions };\n\t\tconst { domNode } = _mountOptions;\n\t\tconst renderResult = w(wrapNodes(renderer), {});\n\t\tconst nextWrapper = {\n\t\t\tnode: renderResult,\n\t\t\torder: 0,\n\t\t\tdepth: 1\n\t\t};\n\t\t_parentWrapperMap.set(nextWrapper, { depth: 0, order: 0, domNode, node: v('fake') });\n\t\t_processQueue.push({\n\t\t\tcurrent: [],\n\t\t\tnext: [nextWrapper],\n\t\t\tmeta: { mergeNodes: arrayFrom(domNode.childNodes) }\n\t\t});\n\t\t_runProcessQueue();\n\t\tlet mergedNode: Node | undefined;\n\t\twhile ((mergedNode = _allMergedNodes.pop())) {\n\t\t\tmergedNode.parentNode && mergedNode.parentNode.removeChild(mergedNode);\n\t\t}\n\t\t_runDomInstructionQueue();\n\t\t_mountOptions.merge = false;\n\t\t_insertBeforeMap = undefined;\n\t\t_runCallbacks();\n\t}\n\n\tfunction invalidate() {\n\t\tparentInvalidate && parentInvalidate();\n\t}\n\n\tfunction _schedule(): void {\n\t\tconst { sync } = _mountOptions;\n\t\tif (sync) {\n\t\t\t_runInvalidationQueue();\n\t\t} else if (!_renderScheduled) {\n\t\t\t_renderScheduled = global.requestAnimationFrame(() => {\n\t\t\t\t_runInvalidationQueue();\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction _runInvalidationQueue() {\n\t\t_renderScheduled = undefined;\n\t\tconst invalidationQueue = [..._invalidationQueue];\n\t\tconst previouslyRendered = [];\n\t\t_invalidationQueue = [];\n\t\tinvalidationQueue.sort((a, b) => {\n\t\t\tlet result = b.depth - a.depth;\n\t\t\tif (result === 0) {\n\t\t\t\tresult = b.order - a.order;\n\t\t\t}\n\t\t\treturn result;\n\t\t});\n\t\tlet item: InvalidationQueueItem | undefined;\n\t\twhile ((item = invalidationQueue.pop())) {\n\t\t\tlet { instance } = item;\n\t\t\tif (previouslyRendered.indexOf(instance) === -1 && _instanceToWrapperMap.has(instance!)) {\n\t\t\t\tpreviouslyRendered.push(instance);\n\t\t\t\tconst current = _instanceToWrapperMap.get(instance)!;\n\t\t\t\tconst instanceData = widgetInstanceMap.get(instance)!;\n\t\t\t\tconst parent = _parentWrapperMap.get(current);\n\t\t\t\tconst sibling = _wrapperSiblingMap.get(current);\n\t\t\t\tconst { constructor, children } = instance;\n\t\t\t\tconst next = {\n\t\t\t\t\tnode: {\n\t\t\t\t\t\ttype: WNODE,\n\t\t\t\t\t\twidgetConstructor: constructor as WidgetBaseConstructor,\n\t\t\t\t\t\tproperties: instanceData.inputProperties,\n\t\t\t\t\t\tchildren: children,\n\t\t\t\t\t\tbind: current.node.bind\n\t\t\t\t\t},\n\t\t\t\t\tinstance,\n\t\t\t\t\tdepth: current.depth,\n\t\t\t\t\torder: current.order\n\t\t\t\t};\n\n\t\t\t\tparent && _parentWrapperMap.set(next, parent);\n\t\t\t\tsibling && _wrapperSiblingMap.set(next, sibling);\n\t\t\t\tconst { item } = _updateWidget({ current, next });\n\t\t\t\tif (item) {\n\t\t\t\t\t_processQueue.push(item);\n\t\t\t\t\tinstance && _instanceToWrapperMap.set(instance, next);\n\t\t\t\t\t_runProcessQueue();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_runDomInstructionQueue();\n\t\t_runCallbacks();\n\t}\n\n\tfunction _runProcessQueue() {\n\t\tlet item: DetachApplication | AttachApplication | ProcessItem | undefined;\n\t\twhile ((item = _processQueue.pop())) {\n\t\t\tif (isAttachApplication(item)) {\n\t\t\t\t_applicationQueue.push(item);\n\t\t\t} else {\n\t\t\t\tconst { current, next, meta } = item;\n\t\t\t\t_process(current || EMPTY_ARRAY, next || EMPTY_ARRAY, meta);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction _runDomInstructionQueue(): void {\n\t\t_applicationQueue.reverse();\n\t\tlet item: ApplicationInstruction | undefined;\n\t\twhile ((item = _applicationQueue.pop())) {\n\t\t\tif (item.type === 'create') {\n\t\t\t\tconst {\n\t\t\t\t\tparentDomNode,\n\t\t\t\t\tnext,\n\t\t\t\t\tnext: {\n\t\t\t\t\t\tdomNode,\n\t\t\t\t\t\tmerged,\n\t\t\t\t\t\trequiresInsertBefore,\n\t\t\t\t\t\tnode: { properties }\n\t\t\t\t\t}\n\t\t\t\t} = item;\n\n\t\t\t\tprocessProperties(next, { properties: {} });\n\t\t\t\trunDeferredProperties(next);\n\t\t\t\tif (!merged) {\n\t\t\t\t\tlet insertBefore: any;\n\t\t\t\t\tif (requiresInsertBefore) {\n\t\t\t\t\t\tinsertBefore = findInsertBefore(next);\n\t\t\t\t\t} else if (_insertBeforeMap) {\n\t\t\t\t\t\tinsertBefore = _insertBeforeMap.get(next);\n\t\t\t\t\t}\n\t\t\t\t\tparentDomNode.insertBefore(domNode!, insertBefore);\n\t\t\t\t\tif (isDomVNode(next.node) && next.node.onAttach) {\n\t\t\t\t\t\tnext.node.onAttach();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ((domNode as HTMLElement).tagName === 'OPTION' && domNode!.parentElement) {\n\t\t\t\t\tsetValue(domNode!.parentElement);\n\t\t\t\t}\n\t\t\t\trunEnterAnimation(next, _mountOptions.transition);\n\t\t\t\tconst instanceData = widgetInstanceMap.get(next.node.bind as WidgetBase);\n\t\t\t\tif (properties.key != null && instanceData) {\n\t\t\t\t\tinstanceData.nodeHandler.add(domNode as HTMLElement, `${properties.key}`);\n\t\t\t\t}\n\t\t\t\titem.next.inserted = true;\n\t\t\t} else if (item.type === 'update') {\n\t\t\t\tconst {\n\t\t\t\t\tnext,\n\t\t\t\t\tnext: { domNode, node },\n\t\t\t\t\tcurrent\n\t\t\t\t} = item;\n\t\t\t\tconst parent = _parentWrapperMap.get(next);\n\t\t\t\tif (parent && isWNodeWrapper(parent) && parent.instance) {\n\t\t\t\t\tconst instanceData = widgetInstanceMap.get(parent.instance);\n\t\t\t\t\tinstanceData && instanceData.nodeHandler.addRoot();\n\t\t\t\t}\n\n\t\t\t\tconst previousProperties = buildPreviousProperties(domNode, current, next);\n\t\t\t\tconst instanceData = widgetInstanceMap.get(next.node.bind as WidgetBase);\n\n\t\t\t\tprocessProperties(next, previousProperties);\n\t\t\t\trunDeferredProperties(next);\n\n\t\t\t\tif (instanceData && node.properties.key != null) {\n\t\t\t\t\tinstanceData.nodeHandler.add(next.domNode as HTMLElement, `${node.properties.key}`);\n\t\t\t\t}\n\t\t\t} else if (item.type === 'delete') {\n\t\t\t\tconst { current } = item;\n\t\t\t\tconst { exitAnimation } = current.node.properties;\n\t\t\t\tif (exitAnimation && exitAnimation !== true) {\n\t\t\t\t\trunExitAnimation(current, _mountOptions.transition, exitAnimation);\n\t\t\t\t} else {\n\t\t\t\t\tcurrent.domNode!.parentNode!.removeChild(current.domNode!);\n\t\t\t\t\tcurrent.domNode = undefined;\n\t\t\t\t}\n\t\t\t} else if (item.type === 'attach') {\n\t\t\t\tconst { instance, attached } = item;\n\t\t\t\tconst instanceData = widgetInstanceMap.get(instance)!;\n\t\t\t\tinstanceData.nodeHandler.addRoot();\n\t\t\t\tattached && instanceData.onAttach();\n\t\t\t} else if (item.type === 'detach') {\n\t\t\t\tif (item.current.instance) {\n\t\t\t\t\tconst instanceData = widgetInstanceMap.get(item.current.instance);\n\t\t\t\t\tinstanceData && instanceData.onDetach();\n\t\t\t\t}\n\t\t\t\titem.current.domNode = undefined;\n\t\t\t\titem.current.node.bind = undefined;\n\t\t\t\titem.current.instance = undefined;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction _runCallbacks() {\n\t\trunAfterRenderCallbacks();\n\t\trunDeferredRenderCallbacks();\n\t}\n\n\tfunction _processMergeNodes(next: DNodeWrapper, mergeNodes: Node[]) {\n\t\tconst { merge } = _mountOptions;\n\t\tif (merge && mergeNodes.length) {\n\t\t\tif (isVNodeWrapper(next)) {\n\t\t\t\tlet {\n\t\t\t\t\tnode: { tag }\n\t\t\t\t} = next;\n\t\t\t\tfor (let i = 0; i < mergeNodes.length; i++) {\n\t\t\t\t\tconst domElement = mergeNodes[i] as Element;\n\t\t\t\t\tif (tag.toUpperCase() === (domElement.tagName || '')) {\n\t\t\t\t\t\tconst mergeNodeIndex = _allMergedNodes.indexOf(domElement);\n\t\t\t\t\t\tif (mergeNodeIndex !== -1) {\n\t\t\t\t\t\t\t_allMergedNodes.splice(mergeNodeIndex, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmergeNodes.splice(i, 1);\n\t\t\t\t\t\tnext.domNode = domElement;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnext.mergeNodes = mergeNodes;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction registerDistinguishableCallback(childNodes: DNodeWrapper[], index: number) {\n\t\t_afterRenderCallbacks.push(() => {\n\t\t\tconst parentWNodeWrapper = findParentWNodeWrapper(childNodes[index]);\n\t\t\tcheckDistinguishable(childNodes, index, parentWNodeWrapper);\n\t\t});\n\t}\n\n\tfunction _process(current: DNodeWrapper[], next: DNodeWrapper[], meta: ProcessMeta = {}): void {\n\t\tlet { mergeNodes = [], oldIndex = 0, newIndex = 0 } = meta;\n\t\tconst currentLength = current.length;\n\t\tconst nextLength = next.length;\n\t\tconst hasPreviousSiblings = currentLength > 1 || (currentLength > 0 && currentLength < nextLength);\n\t\tconst instructions: Instruction[] = [];\n\t\tif (newIndex < nextLength) {\n\t\t\tlet currentWrapper = oldIndex < currentLength ? current[oldIndex] : undefined;\n\t\t\tconst nextWrapper = next[newIndex];\n\t\t\tnextWrapper.hasPreviousSiblings = hasPreviousSiblings;\n\n\t\t\t_processMergeNodes(nextWrapper, mergeNodes);\n\n\t\t\tif (currentWrapper && same(currentWrapper, nextWrapper)) {\n\t\t\t\toldIndex++;\n\t\t\t\tnewIndex++;\n\t\t\t\tif (isVNodeWrapper(currentWrapper) && isVNodeWrapper(nextWrapper)) {\n\t\t\t\t\tnextWrapper.inserted = currentWrapper.inserted;\n\t\t\t\t}\n\t\t\t\tinstructions.push({ current: currentWrapper, next: nextWrapper });\n\t\t\t} else if (!currentWrapper || findIndexOfChild(current, nextWrapper, oldIndex + 1) === -1) {\n\t\t\t\thas('dojo-debug') && current.length && registerDistinguishableCallback(next, newIndex);\n\t\t\t\tinstructions.push({ current: undefined, next: nextWrapper });\n\t\t\t\tnewIndex++;\n\t\t\t} else if (findIndexOfChild(next, currentWrapper, newIndex + 1) === -1) {\n\t\t\t\thas('dojo-debug') && registerDistinguishableCallback(current, oldIndex);\n\t\t\t\tinstructions.push({ current: currentWrapper, next: undefined });\n\t\t\t\toldIndex++;\n\t\t\t} else {\n\t\t\t\thas('dojo-debug') && registerDistinguishableCallback(next, newIndex);\n\t\t\t\thas('dojo-debug') && registerDistinguishableCallback(current, oldIndex);\n\t\t\t\tinstructions.push({ current: currentWrapper, next: undefined });\n\t\t\t\tinstructions.push({ current: undefined, next: nextWrapper });\n\t\t\t\toldIndex++;\n\t\t\t\tnewIndex++;\n\t\t\t}\n\t\t}\n\n\t\tif (newIndex < nextLength) {\n\t\t\t_processQueue.push({ current, next, meta: { mergeNodes, oldIndex, newIndex } });\n\t\t}\n\n\t\tif (currentLength > oldIndex && newIndex >= nextLength) {\n\t\t\tfor (let i = oldIndex; i < currentLength; i++) {\n\t\t\t\thas('dojo-debug') && registerDistinguishableCallback(current, i);\n\t\t\t\tinstructions.push({ current: current[i], next: undefined });\n\t\t\t}\n\t\t}\n\n\t\tfor (let i = 0; i < instructions.length; i++) {\n\t\t\tconst { item, dom, widget } = _processOne(instructions[i]);\n\t\t\twidget && _processQueue.push(widget);\n\t\t\titem && _processQueue.push(item);\n\t\t\tdom && _applicationQueue.push(dom);\n\t\t}\n\t}\n\n\tfunction _processOne({ current, next }: Instruction): ProcessResult {\n\t\tif (current !== next) {\n\t\t\tif (!current && next) {\n\t\t\t\tif (isVNodeWrapper(next)) {\n\t\t\t\t\treturn _createDom({ next });\n\t\t\t\t} else {\n\t\t\t\t\treturn _createWidget({ next });\n\t\t\t\t}\n\t\t\t} else if (current && next) {\n\t\t\t\tif (isVNodeWrapper(current) && isVNodeWrapper(next)) {\n\t\t\t\t\treturn _updateDom({ current, next });\n\t\t\t\t} else if (isWNodeWrapper(current) && isWNodeWrapper(next)) {\n\t\t\t\t\treturn _updateWidget({ current, next });\n\t\t\t\t}\n\t\t\t} else if (current && !next) {\n\t\t\t\tif (isVNodeWrapper(current)) {\n\t\t\t\t\treturn _removeDom({ current });\n\t\t\t\t} else if (isWNodeWrapper(current)) {\n\t\t\t\t\treturn _removeWidget({ current });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn {};\n\t}\n\n\tfunction _createWidget({ next }: CreateWidgetInstruction): ProcessResult {\n\t\tlet {\n\t\t\tnode: { widgetConstructor }\n\t\t} = next;\n\t\tlet { registry } = _mountOptions;\n\t\tif (!isWidgetBaseConstructor(widgetConstructor)) {\n\t\t\treturn {};\n\t\t}\n\t\tconst instance = new widgetConstructor() as WidgetBase;\n\t\tif (registry) {\n\t\t\tinstance.registry.base = registry;\n\t\t}\n\t\tconst instanceData = widgetInstanceMap.get(instance)!;\n\t\tinstanceData.invalidate = () => {\n\t\t\tinstanceData.dirty = true;\n\t\t\tif (!instanceData.rendering && _instanceToWrapperMap.has(instance)) {\n\t\t\t\t_invalidationQueue.push({ instance, depth: next.depth, order: next.order });\n\t\t\t\t_schedule();\n\t\t\t}\n\t\t};\n\t\tinstanceData.rendering = true;\n\t\tinstance.__setProperties__(next.node.properties, next.node.bind);\n\t\tinstance.__setChildren__(next.node.children);\n\t\tnext.instance = instance;\n\t\tlet rendered = instance.__render__();\n\t\tinstanceData.rendering = false;\n\t\tif (rendered) {\n\t\t\trendered = Array.isArray(rendered) ? rendered : [rendered];\n\t\t\tnext.childrenWrappers = renderedToWrapper(rendered, next, null);\n\t\t}\n\t\tif (next.instance) {\n\t\t\t_instanceToWrapperMap.set(next.instance, next);\n\t\t\tif (!parentInvalidate && !(next.instance as any).isWNodeWrapper) {\n\t\t\t\tparentInvalidate = next.instance.invalidate.bind(next.instance);\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\titem: { next: next.childrenWrappers, meta: { mergeNodes: next.mergeNodes } },\n\t\t\twidget: { type: 'attach', instance, attached: true }\n\t\t};\n\t}\n\n\tfunction _updateWidget({ current, next }: UpdateWidgetInstruction): ProcessResult {\n\t\tcurrent = (current.instance && _instanceToWrapperMap.get(current.instance)) || current;\n\t\tconst { instance, domNode, hasAnimations } = current;\n\t\tif (!instance) {\n\t\t\treturn [] as ProcessResult;\n\t\t}\n\t\tconst instanceData = widgetInstanceMap.get(instance)!;\n\t\tnext.instance = instance;\n\t\tif (domNode && domNode.parentNode) {\n\t\t\tnext.domNode = domNode;\n\t\t}\n\t\tnext.hasAnimations = hasAnimations;\n\t\tinstanceData.rendering = true;\n\t\tinstance!.__setProperties__(next.node.properties, next.node.bind);\n\t\tinstance!.__setChildren__(next.node.children);\n\t\t_instanceToWrapperMap.set(next.instance!, next);\n\t\tif (instanceData.dirty) {\n\t\t\tlet rendered = instance!.__render__();\n\t\t\tinstanceData.rendering = false;\n\t\t\tif (rendered) {\n\t\t\t\trendered = Array.isArray(rendered) ? rendered : [rendered];\n\t\t\t\tnext.childrenWrappers = renderedToWrapper(rendered, next, current);\n\t\t\t}\n\t\t\treturn {\n\t\t\t\titem: { current: current.childrenWrappers, next: next.childrenWrappers, meta: {} },\n\t\t\t\twidget: { type: 'attach', instance, attached: false }\n\t\t\t};\n\t\t}\n\t\tinstanceData.rendering = false;\n\t\tnext.childrenWrappers = current.childrenWrappers;\n\t\treturn {\n\t\t\twidget: { type: 'attach', instance, attached: false }\n\t\t};\n\t}\n\n\tfunction _removeWidget({ current }: RemoveWidgetInstruction): ProcessResult {\n\t\tcurrent = current.instance ? _instanceToWrapperMap.get(current.instance)! : current;\n\t\t_wrapperSiblingMap.delete(current);\n\t\t_parentWrapperMap.delete(current);\n\t\t_instanceToWrapperMap.delete(current.instance!);\n\n\t\treturn {\n\t\t\titem: { current: current.childrenWrappers, meta: {} },\n\t\t\twidget: { type: 'detach', current }\n\t\t};\n\t}\n\n\tfunction setDomNodeOnParentWrapper(next: VNodeWrapper) {\n\t\tlet parentWNodeWrapper = findParentWNodeWrapper(next);\n\t\twhile (parentWNodeWrapper && !parentWNodeWrapper.domNode) {\n\t\t\tparentWNodeWrapper.domNode = next.domNode;\n\t\t\tconst nextParent = _parentWrapperMap.get(parentWNodeWrapper);\n\t\t\tif (nextParent && isWNodeWrapper(nextParent)) {\n\t\t\t\tparentWNodeWrapper = nextParent;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tparentWNodeWrapper = undefined;\n\t\t}\n\t}\n\n\tfunction _createDom({ next }: CreateDomInstruction): ProcessResult {\n\t\tlet mergeNodes: Node[] = [];\n\t\tconst parentDomNode = findParentDomNode(next)!;\n\t\tif (!next.domNode) {\n\t\t\tif ((next.node as any).domNode) {\n\t\t\t\tnext.domNode = (next.node as any).domNode;\n\t\t\t} else {\n\t\t\t\tif (next.node.tag === 'svg') {\n\t\t\t\t\tnext.namespace = NAMESPACE_SVG;\n\t\t\t\t}\n\t\t\t\tif (next.node.tag) {\n\t\t\t\t\tif (next.namespace) {\n\t\t\t\t\t\tnext.domNode = global.document.createElementNS(next.namespace, next.node.tag);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tnext.domNode = global.document.createElement(next.node.tag);\n\t\t\t\t\t}\n\t\t\t\t} else if (next.node.text != null) {\n\t\t\t\t\tnext.domNode = global.document.createTextNode(next.node.text);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (_insertBeforeMap && _allMergedNodes.length) {\n\t\t\t\tif (parentDomNode === _allMergedNodes[0].parentNode) {\n\t\t\t\t\t_insertBeforeMap.set(next, _allMergedNodes[0]);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (_mountOptions.merge) {\n\t\t\t\tmergeNodes = arrayFrom(next.domNode.childNodes);\n\t\t\t\t_allMergedNodes = [..._allMergedNodes, ...mergeNodes];\n\t\t\t}\n\t\t\tnext.merged = true;\n\t\t}\n\t\tif (next.domNode) {\n\t\t\tif (next.node.children) {\n\t\t\t\tnext.childrenWrappers = renderedToWrapper(next.node.children, next, null);\n\t\t\t}\n\t\t}\n\t\tsetDomNodeOnParentWrapper(next);\n\t\tconst dom: ApplicationInstruction = {\n\t\t\tnext: next!,\n\t\t\tparentDomNode: parentDomNode,\n\t\t\ttype: 'create'\n\t\t};\n\t\tif (next.childrenWrappers) {\n\t\t\treturn {\n\t\t\t\titem: { current: [], next: next.childrenWrappers, meta: { mergeNodes } },\n\t\t\t\tdom\n\t\t\t};\n\t\t}\n\t\treturn { dom };\n\t}\n\n\tfunction _updateDom({ current, next }: UpdateDomInstruction): ProcessResult {\n\t\tconst parentDomNode = findParentDomNode(current);\n\t\tnext.domNode = current.domNode;\n\t\tnext.namespace = current.namespace;\n\t\tif (next.node.text && next.node.text !== current.node.text) {\n\t\t\tconst updatedTextNode = parentDomNode!.ownerDocument.createTextNode(next.node.text!);\n\t\t\tparentDomNode!.replaceChild(updatedTextNode, next.domNode!);\n\t\t\tnext.domNode = updatedTextNode;\n\t\t} else if (next.node.children) {\n\t\t\tconst children = renderedToWrapper(next.node.children, next, current);\n\t\t\tnext.childrenWrappers = children;\n\t\t}\n\t\treturn {\n\t\t\titem: { current: current.childrenWrappers, next: next.childrenWrappers, meta: {} },\n\t\t\tdom: { type: 'update', next, current }\n\t\t};\n\t}\n\n\tfunction _removeDom({ current }: RemoveDomInstruction): ProcessResult {\n\t\t_wrapperSiblingMap.delete(current);\n\t\t_parentWrapperMap.delete(current);\n\t\tcurrent.node.bind = undefined;\n\t\tif (current.hasAnimations) {\n\t\t\treturn {\n\t\t\t\titem: { current: current.childrenWrappers, meta: {} },\n\t\t\t\tdom: { type: 'delete', current }\n\t\t\t};\n\t\t}\n\n\t\tif (current.childrenWrappers) {\n\t\t\t_afterRenderCallbacks.push(() => {\n\t\t\t\tlet wrappers = current.childrenWrappers || [];\n\t\t\t\tlet wrapper: DNodeWrapper | undefined;\n\t\t\t\twhile ((wrapper = wrappers.pop())) {\n\t\t\t\t\tif (isWNodeWrapper(wrapper)) {\n\t\t\t\t\t\twrapper = wrapper.instance ? _instanceToWrapperMap.get(wrapper.instance) || wrapper : wrapper;\n\t\t\t\t\t\tif (wrapper.instance) {\n\t\t\t\t\t\t\t_instanceToWrapperMap.delete(wrapper.instance);\n\t\t\t\t\t\t\tconst instanceData = widgetInstanceMap.get(wrapper.instance);\n\t\t\t\t\t\t\tinstanceData && instanceData.onDetach();\n\t\t\t\t\t\t}\n\t\t\t\t\t\twrapper.instance = undefined;\n\t\t\t\t\t}\n\t\t\t\t\tif (wrapper.childrenWrappers) {\n\t\t\t\t\t\twrappers.push(...wrapper.childrenWrappers);\n\t\t\t\t\t\twrapper.childrenWrappers = undefined;\n\t\t\t\t\t}\n\t\t\t\t\t_wrapperSiblingMap.delete(wrapper);\n\t\t\t\t\t_parentWrapperMap.delete(wrapper);\n\t\t\t\t\twrapper.domNode = undefined;\n\t\t\t\t\twrapper.node.bind = undefined;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn {\n\t\t\tdom: { type: 'delete', current }\n\t\t};\n\t}\n\n\treturn {\n\t\tmount,\n\t\tinvalidate\n\t};\n}\n\nexport default renderer;\n","import { v, w } from './d';\nimport { Constructor, DNode } from './interfaces';\nimport { WNode, VNodeProperties } from './interfaces';\n\ndeclare global {\n\tnamespace JSX {\n\t\ttype Element = WNode;\n\t\tinterface ElementAttributesProperty {\n\t\t\tproperties: {};\n\t\t}\n\t\tinterface IntrinsicElements {\n\t\t\t[key: string]: VNodeProperties;\n\t\t}\n\t}\n}\n\nexport const REGISTRY_ITEM = '__registry_item';\n\nexport class FromRegistry<P> {\n\tstatic type = REGISTRY_ITEM;\n\tproperties: P = {} as P;\n\tname: string | undefined;\n}\n\nexport function fromRegistry<P>(tag: string): Constructor<FromRegistry<P>> {\n\treturn class extends FromRegistry<P> {\n\t\tproperties: P = {} as P;\n\t\tstatic type = REGISTRY_ITEM;\n\t\tname = tag;\n\t};\n}\n\nfunction spreadChildren(children: any[], child: any): any[] {\n\tif (Array.isArray(child)) {\n\t\treturn child.reduce(spreadChildren, children);\n\t} else {\n\t\treturn [...children, child];\n\t}\n}\n\nexport function tsx(tag: any, properties = {}, ...children: any[]): DNode {\n\tchildren = children.reduce(spreadChildren, []);\n\tproperties = properties === null ? {} : properties;\n\tif (typeof tag === 'string') {\n\t\treturn v(tag, properties, children);\n\t} else if (tag.type === 'registry' && (properties as any).__autoRegistryItem) {\n\t\tconst name = (properties as any).__autoRegistryItem;\n\t\tdelete (properties as any).__autoRegistryItem;\n\t\treturn w(name, properties, children);\n\t} else if (tag.type === REGISTRY_ITEM) {\n\t\tconst registryItem = new tag();\n\t\treturn w(registryItem.name, properties, children);\n\t} else {\n\t\treturn w(tag, properties, children);\n\t}\n}\n","import { Destroyable } from '../../core/Destroyable';\nimport Map from '../../shim/Map';\nimport WeakMap from '../../shim/WeakMap';\nimport { WidgetMetaProperties, MetaBase } from '../interfaces';\n\nexport class Block extends Destroyable implements MetaBase {\n\tprivate _moduleMap = new WeakMap<Function, any>();\n\tprivate _invalidate: () => void;\n\n\tconstructor(properties: WidgetMetaProperties) {\n\t\tsuper();\n\t\tthis._invalidate = properties.invalidate;\n\t}\n\n\tpublic run<T extends Function>(module: T): T {\n\t\tconst decoratedModule: any = (...args: any[]) => {\n\t\t\tconst argsString = JSON.stringify(args);\n\t\t\tlet valueMap = this._moduleMap.get(module);\n\t\t\tif (valueMap) {\n\t\t\t\tconst cachedValue = valueMap.get(argsString);\n\t\t\t\tif (cachedValue !== undefined) {\n\t\t\t\t\treturn cachedValue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst result = module(...args);\n\t\t\tif (result && typeof result.then === 'function') {\n\t\t\t\tresult.then((result: any) => {\n\t\t\t\t\tif (!valueMap) {\n\t\t\t\t\t\tvalueMap = new Map();\n\t\t\t\t\t\tthis._moduleMap.set(module, valueMap);\n\t\t\t\t\t}\n\t\t\t\t\tvalueMap.set(argsString, result);\n\t\t\t\t\tthis._invalidate();\n\t\t\t\t});\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn result;\n\t\t};\n\t\treturn decoratedModule as T;\n\t}\n}\n\nexport default Block;\n","var modulePath = 'src/markdown.block'\n\nimport has from '@dojo/framework/has/has';\nimport global from '@dojo/framework/shim/global';\n\nexport default function () {\n\tvar args = Array.prototype.slice.call(arguments);\n\t/** @preserve dojoBuildBridgeCache 'src/markdown.block' **/\n\tif (has('build-time-render') && global.__dojoBuildBridge) {\n\t\treturn global.__dojoBuildBridge(modulePath, args);\n\t}\n\telse {\n\t\tvar stringifiedArgs = JSON.stringify(args);\n\t\tif (global.__dojoBuildBridgeCache &&\n\t\t\tglobal.__dojoBuildBridgeCache[modulePath] &&\n\t\t\tglobal.__dojoBuildBridgeCache[modulePath][stringifiedArgs]\n\t\t) {\n\t\t\treturn global.__dojoBuildBridgeCache[modulePath][stringifiedArgs];\n\t\t}\n\t\treturn undefined;\n\t}\n}\n","import renderer from '@dojo/framework/widget-core/vdom';\nimport WidgetBase from '@dojo/framework/widget-core/WidgetBase';\nimport { tsx } from '@dojo/framework/widget-core/tsx';\nimport Block from '@dojo/framework/widget-core/meta/Block';\n\nimport markdown from './markdown.block';\n\nclass App extends WidgetBase {\n\tprotected render() {\n\t\tconst content = this.meta(Block).run(markdown)();\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div innerHTML={content} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst r = renderer(() => <App />);\nr.mount({ domNode: document.getElementById('app')! });\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global global, define, System, Reflect, Promise */\r\nvar __extends;\r\nvar __assign;\r\nvar __rest;\r\nvar __decorate;\r\nvar __param;\r\nvar __metadata;\r\nvar __awaiter;\r\nvar __generator;\r\nvar __exportStar;\r\nvar __values;\r\nvar __read;\r\nvar __spread;\r\nvar __await;\r\nvar __asyncGenerator;\r\nvar __asyncDelegator;\r\nvar __asyncValues;\r\nvar __makeTemplateObject;\r\n(function (factory) {\r\n    var root = typeof global === \"object\" ? global : typeof self === \"object\" ? self : typeof this === \"object\" ? this : {};\r\n    if (typeof define === \"function\" && define.amd) {\r\n        define(\"tslib\", [\"exports\"], function (exports) { factory(createExporter(root, createExporter(exports))); });\r\n    }\r\n    else if (typeof module === \"object\" && typeof module.exports === \"object\") {\r\n        factory(createExporter(root, createExporter(module.exports)));\r\n    }\r\n    else {\r\n        factory(createExporter(root));\r\n    }\r\n    function createExporter(exports, previous) {\r\n        if (exports !== root) {\r\n            if (typeof Object.create === \"function\") {\r\n                Object.defineProperty(exports, \"__esModule\", { value: true });\r\n            }\r\n            else {\r\n                exports.__esModule = true;\r\n            }\r\n        }\r\n        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };\r\n    }\r\n})\r\n(function (exporter) {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\n    __extends = function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n\r\n    __assign = Object.assign || function (t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n\r\n    __rest = function (s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n                t[p[i]] = s[p[i]];\r\n        return t;\r\n    };\r\n\r\n    __decorate = function (decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    };\r\n\r\n    __param = function (paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    };\r\n\r\n    __metadata = function (metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    };\r\n\r\n    __awaiter = function (thisArg, _arguments, P, generator) {\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    };\r\n\r\n    __generator = function (thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [0, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    };\r\n\r\n    __exportStar = function (m, exports) {\r\n        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    };\r\n\r\n    __values = function (o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    };\r\n\r\n    __read = function (o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    };\r\n\r\n    __spread = function () {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    };\r\n\r\n    __await = function (v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    };\r\n\r\n    __asyncGenerator = function (thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    };\r\n\r\n    __asyncDelegator = function (o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n    };\r\n\r\n    __asyncValues = function (o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator];\r\n        return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n    };\r\n\r\n    __makeTemplateObject = function (cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    exporter(\"__extends\", __extends);\r\n    exporter(\"__assign\", __assign);\r\n    exporter(\"__rest\", __rest);\r\n    exporter(\"__decorate\", __decorate);\r\n    exporter(\"__param\", __param);\r\n    exporter(\"__metadata\", __metadata);\r\n    exporter(\"__awaiter\", __awaiter);\r\n    exporter(\"__generator\", __generator);\r\n    exporter(\"__exportStar\", __exportStar);\r\n    exporter(\"__values\", __values);\r\n    exporter(\"__read\", __read);\r\n    exporter(\"__spread\", __spread);\r\n    exporter(\"__await\", __await);\r\n    exporter(\"__asyncGenerator\", __asyncGenerator);\r\n    exporter(\"__asyncDelegator\", __asyncDelegator);\r\n    exporter(\"__asyncValues\", __asyncValues);\r\n    exporter(\"__makeTemplateObject\", __makeTemplateObject);\r\n});\r\n"]}